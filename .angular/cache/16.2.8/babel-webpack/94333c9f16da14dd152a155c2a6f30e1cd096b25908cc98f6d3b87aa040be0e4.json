{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/clq/Documents/GitHub/Anime-sama-mobile-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { WebPlugin } from '@capacitor/core';\nexport class ScreenOrientationWeb extends WebPlugin {\n  constructor() {\n    super();\n    if (typeof screen !== 'undefined' && typeof screen.orientation !== 'undefined') {\n      screen.orientation.addEventListener('change', () => {\n        const type = screen.orientation.type;\n        this.notifyListeners('screenOrientationChange', {\n          type\n        });\n      });\n    }\n  }\n  orientation() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (typeof screen === 'undefined' || !screen.orientation) {\n        throw _this.unavailable('ScreenOrientation API not available in this browser');\n      }\n      return {\n        type: screen.orientation.type\n      };\n    })();\n  }\n  lock(options) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (typeof screen === 'undefined' || !screen.orientation || !screen.orientation.lock) {\n        throw _this2.unavailable('ScreenOrientation API not available in this browser');\n      }\n      try {\n        yield screen.orientation.lock(options.orientation);\n      } catch (_a) {\n        throw _this2.unavailable('ScreenOrientation API not available in this browser');\n      }\n    })();\n  }\n  unlock() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (typeof screen === 'undefined' || !screen.orientation || !screen.orientation.unlock) {\n        throw _this3.unavailable('ScreenOrientation API not available in this browser');\n      }\n      try {\n        screen.orientation.unlock();\n      } catch (_a) {\n        throw _this3.unavailable('ScreenOrientation API not available in this browser');\n      }\n    })();\n  }\n}\n//# sourceMappingURL=web.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}