{"ast":null,"code":"import _asyncToGenerator from \"/Users/raphaelboullay/Documents/GitHub/Anime-sama-mobile-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { PushNotifications } from '@capacitor/push-notifications';\nimport { OpenNativeSettings } from '@awesome-cordova-plugins/open-native-settings';\nlet HomePage = class HomePage {\n  constructor() {\n    var _this = this;\n    this.animenotiflist = [{\n      id: 'deadmount',\n      name: 'Dead Mount Death Play'\n    }, {\n      id: 'tokyorevengers',\n      name: 'Tokyo Revengers'\n    }, {\n      id: 'maitreinterdits',\n      name: 'Moi, Le Maitre Des Interdits'\n    }, {\n      id: 'eminence',\n      name: 'The Eminence In Shadow'\n    }, {\n      id: 'drstone',\n      name: 'Dr Stone'\n    }, {\n      id: 'jjk',\n      name: 'Jujutsu Kaisen'\n    }, {\n      id: 'frieren',\n      name: 'Frieren'\n    }, {\n      id: 'spy',\n      name: 'Spy X Family'\n    }, {\n      id: 'ragna',\n      name: 'Ragna Crimson'\n    }, {\n      id: 'shangri',\n      name: 'Shangri-La Frontier'\n    }];\n    this.createNotificationChannels = /*#__PURE__*/_asyncToGenerator(function* () {\n      const channels = yield PushNotifications.listChannels();\n      for (const channel of channels.channels) {\n        if (!_this.animenotiflist.some(anime => anime.id === channel.id)) {\n          yield PushNotifications.deleteChannel({\n            id: channel.id\n          });\n        }\n      }\n      for (const anime of _this.animenotiflist) {\n        const channel = {\n          id: anime.id,\n          name: anime.name,\n          description: `Notifications for the anime ${anime.name}.`\n        };\n        yield PushNotifications.createChannel(channel);\n      }\n      yield OpenNativeSettings.open('notification_id');\n    });\n  }\n  ngOnInit() {\n    PushNotifications.requestPermissions().then(result => {\n      if (result.receive === 'granted') {\n        PushNotifications.register();\n      } else {\n        console.error('Permission not granted');\n      }\n    });\n    console.log('Initializing HomePage');\n    PushNotifications.addListener('registration', token => {\n      console.log('Push registration success, token: ' + token.value);\n    });\n    PushNotifications.addListener('registrationError', error => {\n      alert('Error on registration: ' + JSON.stringify(error));\n    });\n    PushNotifications.addListener('pushNotificationReceived', notification => {\n      alert('Push received: ' + JSON.stringify(notification));\n    });\n    PushNotifications.addListener('pushNotificationActionPerformed', notification => {\n      alert('Push action performed: ' + JSON.stringify(notification));\n    });\n  }\n  goToMainPage() {\n    const iframe = document.getElementById('myIframe');\n    if (iframe) {\n      iframe.src = 'https://anime-sama.fr';\n    }\n  }\n  goToReleasedPage() {\n    const iframe = document.getElementById('myIframe');\n    if (iframe) {\n      iframe.src = 'https://anime-sama.fr/planning/';\n    }\n  }\n};\nHomePage = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss']\n})], HomePage);\nexport { HomePage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}