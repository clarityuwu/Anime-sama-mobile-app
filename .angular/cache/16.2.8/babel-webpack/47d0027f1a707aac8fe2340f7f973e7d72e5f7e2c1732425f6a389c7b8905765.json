{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/clq/Documents/GitHub/Anime-sama-mobile-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { PushNotifications } from '@capacitor/push-notifications';\nimport { OpenNativeSettings } from '@awesome-cordova-plugins/open-native-settings';\nimport { App } from '@capacitor/app';\nimport { ScreenOrientation } from \"@capacitor/screen-orientation\";\nimport Shepherd from 'shepherd.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/platform-browser\";\nlet HomePage = /*#__PURE__*/(() => {\n  class HomePage {\n    constructor(platform, sanitizer) {\n      var _this = this;\n      this.platform = platform;\n      this.sanitizer = sanitizer;\n      this.animenotiflist = [{\n        id: 'deadmount',\n        name: 'Dead Mount Death Play'\n      }, {\n        id: 'tokyorevengers',\n        name: 'Tokyo Revengers'\n      }, {\n        id: 'maitreinterdits',\n        name: 'Moi, Le Maitre Des Interdits'\n      }, {\n        id: 'eminence',\n        name: 'The Eminence In Shadow'\n      }, {\n        id: 'drstone',\n        name: 'Dr Stone'\n      }, {\n        id: 'jjk',\n        name: 'Jujutsu Kaisen'\n      }, {\n        id: 'frieren',\n        name: 'Frieren'\n      }, {\n        id: 'spy',\n        name: 'Spy X Family'\n      }, {\n        id: 'ragna',\n        name: 'Ragna Crimson'\n      }, {\n        id: 'shangri',\n        name: 'Shangri-La Frontier'\n      }, {\n        id: 'update',\n        name: 'Update'\n      }];\n      this.createNotificationChannels = /*#__PURE__*/_asyncToGenerator(function* () {\n        const channels = yield PushNotifications.listChannels();\n        for (const channel of channels.channels) {\n          if (!_this.animenotiflist.some(anime => anime.id === channel.id)) {\n            yield PushNotifications.deleteChannel({\n              id: channel.id\n            });\n          }\n        }\n        for (const anime of _this.animenotiflist) {\n          const channel = {\n            id: anime.id,\n            name: anime.name,\n            description: `Notifications for the anime ${anime.name}.`\n          };\n          yield PushNotifications.createChannel(channel);\n        }\n        yield OpenNativeSettings.open('notification_id');\n      });\n    }\n    ngOnInit() {\n      var _this2 = this;\n      this.urlSafe = this.sanitizer.bypassSecurityTrustResourceUrl('https://anime-sama.fr/');\n      if (!localStorage.getItem('tourShown')) {\n        const tour = new Shepherd.Tour({\n          defaultStepOptions: {\n            cancelIcon: {\n              enabled: true\n            },\n            classes: 'shepherd-theme-dark',\n            scrollTo: {\n              behavior: 'smooth',\n              block: 'center'\n            }\n          },\n          useModalOverlay: true\n        });\n        tour.addStep({\n          id: 'createNotificationChannels',\n          text: 'Ce bouton va vous permettre modifier quel anime vous voulez recevoir ! Attention il faut clicker dessus pour créer les notifications !',\n          attachTo: {\n            element: '.fab-button-danger',\n            on: 'bottom'\n          },\n          buttons: [{\n            action: tour.next,\n            text: 'Suivant'\n          }]\n        });\n        tour.addStep({\n          id: 'goToReleasedPage',\n          text: 'Ce bouton va sur la page des derniers anime du moment !',\n          attachTo: {\n            element: '.fab-button-primary',\n            on: 'bottom'\n          },\n          buttons: [{\n            action: tour.next,\n            text: 'Suivant'\n          }]\n        });\n        tour.addStep({\n          id: 'goToMainPage',\n          text: 'Ce bouton va sur la page principale !',\n          attachTo: {\n            element: '.fab-button-secondary',\n            on: 'bottom'\n          },\n          buttons: [{\n            action: tour.next,\n            text: 'Suivant'\n          }]\n        });\n        tour.addStep({\n          id: 'tourComplete',\n          text: 'Le tour est terminé ! Vous pouvez me soutenir en allant sur mon GitHub et en mettant une étoile !',\n          buttons: [{\n            text: 'Open GitHub',\n            action: () => window.open('https://github.com/clarityuwu/Anime-sama-mobile-app', '_blank')\n          }]\n        });\n        tour.start();\n        localStorage.setItem('tourShown', 'true');\n      }\n      document.addEventListener('fullscreenchange', /*#__PURE__*/_asyncToGenerator(function* () {\n        const iframe = document.getElementById('myIframe');\n        if (document.fullscreenElement === iframe) {\n          try {\n            yield ScreenOrientation.lock({\n              orientation: 'landscape'\n            });\n          } catch (error) {\n            console.error('Could not lock screen orientation:', error);\n          }\n        } else {\n          try {\n            yield ScreenOrientation.unlock();\n          } catch (error) {\n            console.error('Could not unlock screen orientation:', error);\n          }\n        }\n      }));\n      App.addListener('backButton', ({\n        canGoBack\n      }) => {\n        console.log(canGoBack);\n        if (canGoBack) {\n          window.history.back();\n        }\n      });\n      PushNotifications.requestPermissions().then(result => {\n        if (result.receive === 'granted') {\n          PushNotifications.register();\n        } else {\n          console.error('Permission not granted');\n        }\n      });\n      console.log('Initializing HomePage');\n      PushNotifications.addListener('registration', token => {\n        console.log('Push registration success, token: ' + token.value);\n      });\n      PushNotifications.addListener('registrationError', error => {\n        alert('Error on registration: ' + JSON.stringify(error));\n      });\n      PushNotifications.addListener('pushNotificationReceived', notification => {\n        alert('Push received: ' + JSON.stringify(notification));\n      });\n      PushNotifications.addListener('pushNotificationActionPerformed', /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator(function* (notification) {\n          const data = notification.notification.data;\n          if (data && data['update'] === '1') {\n            const choice = yield _this2.presentUpdateAlert(); // Call function to present the alert\n            if (choice === 'GitHub') {\n              window.open('https://github.com/clarityuwu/Anime-sama-mobile-app/releases', '_blank');\n            } else if (choice === 'PlayStore') {\n              // Add logic to open Play Store link\n            }\n          } else {\n            _this2.goToMainPage();\n          }\n        });\n        return function (_x) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    }\n    goToMainPage() {\n      const iframe = document.getElementById('myIframe');\n      if (iframe) {\n        iframe.src = 'https://anime-sama.fr';\n      }\n    }\n    goToReleasedPage() {\n      const iframe = document.getElementById('myIframe');\n      if (iframe) {\n        iframe.src = 'https://anime-sama.fr/planning/';\n      }\n    }\n    presentUpdateAlert() {\n      return _asyncToGenerator(function* () {\n        return new Promise(resolve => {\n          const alert = document.createElement('ion-alert');\n          alert.header = 'Mise à jour disponible';\n          alert.message = 'Une mise à jour est disponible, veillez choisir ou vous voulez la télécharger. Vous pouvez aussi ignorer cette mise à jour mais les notification de anime sera obsolète.';\n          alert.buttons = [{\n            text: 'GitHub',\n            handler: () => {\n              resolve('GitHub');\n            }\n          }, {\n            text: 'Play Store',\n            handler: () => {\n              resolve('PlayStore');\n            }\n          }];\n          document.body.appendChild(alert);\n          return alert.present();\n        });\n      })();\n    }\n    static #_ = this.ɵfac = function HomePage_Factory(t) {\n      return new (t || HomePage)(i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: HomePage,\n      selectors: [[\"app-home\"]],\n      decls: 9,\n      vars: 1,\n      consts: [[\"vertical\", \"bottom\", \"horizontal\", \"end\", \"slot\", \"fixed\"], [\"color\", \"primary\", 1, \"fab-button-primary\", 3, \"click\"], [\"name\", \"calendar-number-outline\"], [\"color\", \"secondary\", 1, \"fab-button-secondary\", 3, \"click\"], [\"name\", \"home\"], [\"color\", \"danger\", 1, \"fab-button-danger\", 3, \"click\"], [\"name\", \"notifications-outline\"], [2, \"width\", \"104%\", \"height\", \"100%\", \"overflow\", \"hidden\"], [\"frameborder\", \"0\", \"allowfullscreen\", \"\", 3, \"src\"]],\n      template: function HomePage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-fab\", 0)(1, \"ion-fab-button\", 1);\n          i0.ɵɵlistener(\"click\", function HomePage_Template_ion_fab_button_click_1_listener() {\n            return ctx.goToReleasedPage();\n          });\n          i0.ɵɵelement(2, \"ion-icon\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"ion-fab-button\", 3);\n          i0.ɵɵlistener(\"click\", function HomePage_Template_ion_fab_button_click_3_listener() {\n            return ctx.goToMainPage();\n          });\n          i0.ɵɵelement(4, \"ion-icon\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"ion-fab-button\", 5);\n          i0.ɵɵlistener(\"click\", function HomePage_Template_ion_fab_button_click_5_listener() {\n            return ctx.createNotificationChannels();\n          });\n          i0.ɵɵelement(6, \"ion-icon\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 7);\n          i0.ɵɵelement(8, \"iframe\", 8);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"src\", ctx.urlSafe, i0.ɵɵsanitizeResourceUrl);\n        }\n      },\n      dependencies: [i1.IonFab, i1.IonFabButton, i1.IonIcon],\n      styles: [\"body[_ngcontent-%COMP%], html[_ngcontent-%COMP%]{margin:0;padding:0;width:100%;height:100%;overflow:hidden}iframe[_ngcontent-%COMP%]{display:block;width:100%;height:100%;border:none}ion-fab-button[_ngcontent-%COMP%]{position:fixed;bottom:20px;--background: #b7f399;--background-activated: #87d361;--background-hover: #a3e681;--border-radius: 15px;--box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, .3), 0px 1px 3px 1px rgba(0, 0, 0, .15);--color: black}ion-fab-button[_ngcontent-%COMP%]:nth-child(1){right:22%}ion-fab-button[_ngcontent-%COMP%]:nth-child(2){right:44%}ion-fab-button[_ngcontent-%COMP%]:nth-child(3){right:66%}\"]\n    });\n  }\n  return HomePage;\n})();\nexport { HomePage };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}