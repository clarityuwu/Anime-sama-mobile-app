{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';\nvar OpenNativeSettingsOriginal = /** @class */function (_super) {\n  __extends(OpenNativeSettingsOriginal, _super);\n  function OpenNativeSettingsOriginal() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  OpenNativeSettingsOriginal.prototype.open = function (setting) {\n    return cordova(this, \"open\", {}, arguments);\n  };\n  OpenNativeSettingsOriginal.pluginName = \"OpenNativeSettings\";\n  OpenNativeSettingsOriginal.plugin = \"cordova-open-native-settings\";\n  OpenNativeSettingsOriginal.pluginRef = \"cordova.plugins.settings\";\n  OpenNativeSettingsOriginal.repo = \"https://github.com/guyromb/Cordova-open-native-settings\";\n  OpenNativeSettingsOriginal.platforms = [\"Android\", \"iOS\"];\n  return OpenNativeSettingsOriginal;\n}(AwesomeCordovaNativePlugin);\nvar OpenNativeSettings = new OpenNativeSettingsOriginal();\nexport { OpenNativeSettings };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvb3Blbi1uYXRpdmUtc2V0dGluZ3MvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsT0FBTyx1Q0FBK0MsTUFBTSwrQkFBK0IsQ0FBQzs7SUFtR3BELHNDQUEwQjs7OztJQVFoRSxpQ0FBSSxhQUFDLE9BQW1DOzs7Ozs7NkJBNUcxQztFQW9Hd0MsMEJBQTBCO1NBQXJELGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIEF3ZXNvbWVDb3Jkb3ZhTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAYXdlc29tZS1jb3Jkb3ZhLXBsdWdpbnMvY29yZSc7XG5cbi8qKlxuICogQG5hbWUgT3BlbiBOYXRpdmUgU2V0dGluZ3NcbiAqIEBkZXNjcmlwdGlvblxuICogUGx1Z2luIHRvIG9wZW4gbmF0aXZlIHNjcmVlbnMgb2YgaU9TL2FuZHJvaWQgc2V0dGluZ3NcbiAqIEB1c2FnZVxuICogWW91IGNhbiBvcGVuIGFueSBvZiB0aGVzZSBzZXR0aW5nczpcbiAqIGBgYFxuICogIFwiYWJvdXRcIiwgLy8gaW9zXG4gKiAgXCJhY2Nlc3NpYmlsaXR5XCIsIC8vIGlvcywgYW5kcm9pZFxuICogIFwiYWNjb3VudFwiLCAvLyBpb3MsIGFuZHJvaWRcbiAqICBcImFpcnBsYW5lX21vZGVcIiwgLy8gaW9zLCBhbmRyb2lkXG4gKiAgXCJhcG5cIiwgLy8gYW5kcm9pZFxuICogIFwiYXBwbGljYXRpb25fZGV0YWlsc1wiLCAvLyBpb3MsIGFuZHJvaWRcbiAqICBcImFwcGxpY2F0aW9uX2RldmVsb3BtZW50XCIsIC8vIGFuZHJvaWRcbiAqICBcImFwcGxpY2F0aW9uXCIsIC8vIGFuZHJvaWRcbiAqICBcImF1dG9sb2NrXCIsIC8vIGlvc1xuICogIFwiYmF0dGVyeV9vcHRpbWl6YXRpb25cIiwgLy8gYW5kcm9pZFxuICogIFwiYmx1ZXRvb3RoXCIsIC8vIGlvcywgYW5kcm9pZFxuICogIFwiY2FzdGxlXCIsIC8vIGlvc1xuICogIFwiY2FwdGlvbmluZ1wiLCAvLyBhbmRyb2lkXG4gKiAgXCJjYXN0XCIsIC8vIGFuZHJvaWRcbiAqICBcImNlbGx1bGFyX3VzYWdlXCIsIC8vIGlvc1xuICogIFwiY29uZmlndXJhdGlvbl9saXN0XCIsIC8vIGlvc1xuICogIFwiZGF0YV9yb2FtaW5nXCIsIC8vIGFuZHJvaWRcbiAqICBcImRhdGVcIiwgLy8gaW9zLCBhbmRyb2lkXG4gKiAgXCJkaXNwbGF5XCIsIC8vIGlvcywgYW5kcm9pZFxuICogIFwiZHJlYW1cIiwgLy8gYW5kcm9pZFxuICogIFwiZmFjZXRpbWVcIiwgLy8gaW9zXG4gKiAgXCJob21lXCIsIC8vIGFuZHJvaWRcbiAqICBcImtleWJvYXJkXCIsIC8vIGlvcywgYW5kcm9pZFxuICogIFwia2V5Ym9hcmRfc3VidHlwZVwiLCAvLyBhbmRyb2lkXG4gKiAgXCJsb2NhbGVcIiwgLy8gaW9zLCBhbmRyb2lkXG4gKiBcImxvY2F0aW9uXCIsIC8vIGlvcywgYW5kcm9pZFxuICogXCJsb2NhdGlvbnNcIiwgLy8gaW9zXG4gKiBcIm1hbmFnZV9hbGxfYXBwbGljYXRpb25zXCIsIC8vIGFuZHJvaWRcbiAqIFwibWFuYWdlX2FwcGxpY2F0aW9uc1wiLCAvLyBhbmRyb2lkXG4gKiBcIm1lbW9yeV9jYXJkXCIsIC8vIGFuZHJvaWRcbiAqIFwibXVzaWNcIiwgLy8gaW9zXG4gKiBcIm11c2ljX2VxdWFsaXplclwiLCAvLyBpb3NcbiAqIFwibXVzaWNfdm9sdW1lXCIsIC8vIGlvc1xuICogXCJuZXR3b3JrXCIsIC8vIGlvcywgYW5kcm9pZFxuICogXCJuaWtlX2lwb2RcIiwgLy8gaW9zXG4gKiBcIm5mY3NoYXJpbmdcIiwgLy8gYW5kcm9pZFxuICogXCJuZmNfcGF5bWVudFwiLCAvLyBhbmRyb2lkXG4gKiBcIm5mY19zZXR0aW5nc1wiLCAvLyBhbmRyb2lkXG4gKiBcIm5vdGVzXCIsIC8vIGlvc1xuICogXCJub3RpZmljYXRpb25faWRcIiwgLy8gaW9zXG4gKiBcInBhc3Nib29rXCIsIC8vIGlvc1xuICogXCJwaG9uZVwiLCAvLyBpb3NcbiAqIFwicGhvdG9zXCIsIC8vIGlvc1xuICogXCJwcmludFwiLCAvLyBhbmRyb2lkXG4gKiBcInByaXZhY3lcIiwgLy8gYW5kcm9pZFxuICogXCJxdWlja19sYXVuY2hcIiwgLy8gYW5kcm9pZFxuICogXCJyZXNldFwiLCAvLyBpb3NcbiAqIFwicmluZ3RvbmVcIiwgLy8gaW9zXG4gKiBcImJyb3dzZXJcIiwgLy8gaW9zXG4gKiBcInNlYXJjaFwiLCAvLyBpb3MsIGFuZHJvaWRcbiAqIFwic2VjdXJpdHlcIiwgLy8gYW5kcm9pZFxuICogXCJzZXR0aW5nc1wiLCAvLyBpb3MsIGFuZHJvaWRcbiAqIFwic2hvd19yZWd1bGF0b3J5X2luZm9cIixcbiAqIFwic291bmRcIiwgLy8gaW9zLCBhbmRyb2lkXG4gKiBcInNvZnR3YXJlX3VwZGF0ZVwiLCAvLyBpb3NcbiAqIFwic3RvcmFnZVwiLCAvLyBpb3MsIGFuZHJvaWRcbiAqIFwic3RvcmVcIiwgLy8gaW9zLCBhbmRyb2lkXG4gKiBcInN5bmNcIiwgLy8gYW5kcm9pZFxuICogXCJ0ZXRoZXJpbmdcIiwgLy8gaW9zXG4gKiBcInR3aXR0ZXJcIiwgLy8gaW9zXG4gKiBcInRvdWNoXCIsIC8vIGlvc1xuICogXCJ1c2FnZVwiLCAvLyBpb3MsIGFuZHJvaWRcbiAqIFwidXNlcl9kaWN0aW9uYXJ5XCIsIC8vIGFuZHJvaWRcbiAqIFwidmlkZW9cIiwgLy8gaW9zXG4gKiBcInZvaWNlX2lucHV0XCIsIC8vIGFuZHJvaWRcbiAqIFwidnBuXCIsIC8vIGlvc1xuICogXCJ3YWxscGFwZXJcIiwgLy8gaW9zXG4gKiBcIndpZmlfaXBcIiwgLy8gYW5kcm9pZFxuICogXCJ3aWZpXCIsIC8vIGlvcywgYW5kcm9pZFxuICogXCJ3aXJlbGVzc1wiIC8vIGFuZHJvaWRcbiAqICBgYGBcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IE9wZW5OYXRpdmVTZXR0aW5ncyB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9vcGVuLW5hdGl2ZS1zZXR0aW5ncy9uZ3gnO1xuICpcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIG9wZW5OYXRpdmVTZXR0aW5nczogT3Blbk5hdGl2ZVNldHRpbmdzKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnT3Blbk5hdGl2ZVNldHRpbmdzJyxcbiAgcGx1Z2luOiAnY29yZG92YS1vcGVuLW5hdGl2ZS1zZXR0aW5ncycsXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5zZXR0aW5ncycsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vZ3V5cm9tYi9Db3Jkb3ZhLW9wZW4tbmF0aXZlLXNldHRpbmdzJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE9wZW5OYXRpdmVTZXR0aW5ncyBleHRlbmRzIEF3ZXNvbWVDb3Jkb3ZhTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIE9wZW5zIGEgc2V0dGluZyBkaWFsb2dcbiAgICpcbiAgICogQHBhcmFtIHNldHRpbmcge3N0cmluZ3xhcnJheX0gc2V0dGluZyBuYW1lXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIG9wZW4oc2V0dGluZzogc3RyaW5nIHwgW3N0cmluZywgYm9vbGVhbl0pOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}