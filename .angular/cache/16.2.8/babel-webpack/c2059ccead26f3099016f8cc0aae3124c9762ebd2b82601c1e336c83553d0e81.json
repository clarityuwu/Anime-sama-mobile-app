{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { w as win } from './index5.js';\nimport { r as raf } from './helpers.js';\nlet animationPrefix;\n/**\n * Web Animations requires hyphenated CSS properties\n * to be written in camelCase when animating\n */\nconst processKeyframes = keyframes => {\n  keyframes.forEach(keyframe => {\n    for (const key in keyframe) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (keyframe.hasOwnProperty(key)) {\n        const value = keyframe[key];\n        if (key === 'easing') {\n          const newKey = 'animation-timing-function';\n          keyframe[newKey] = value;\n          delete keyframe[key];\n        } else {\n          const newKey = convertCamelCaseToHypen(key);\n          if (newKey !== key) {\n            keyframe[newKey] = value;\n            delete keyframe[key];\n          }\n        }\n      }\n    }\n  });\n  return keyframes;\n};\nconst convertCamelCaseToHypen = str => {\n  return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n};\nconst getAnimationPrefix = el => {\n  if (animationPrefix === undefined) {\n    const supportsUnprefixed = el.style.animationName !== undefined;\n    const supportsWebkitPrefix = el.style.webkitAnimationName !== undefined;\n    animationPrefix = !supportsUnprefixed && supportsWebkitPrefix ? '-webkit-' : '';\n  }\n  return animationPrefix;\n};\nconst setStyleProperty = (element, propertyName, value) => {\n  const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n  element.style.setProperty(prefix + propertyName, value);\n};\nconst removeStyleProperty = (element, propertyName) => {\n  const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n  element.style.removeProperty(prefix + propertyName);\n};\nconst animationEnd = (el, callback) => {\n  let unRegTrans;\n  const opts = {\n    passive: true\n  };\n  const unregister = () => {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n  const onTransitionEnd = ev => {\n    if (el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n  if (el) {\n    el.addEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n    el.addEventListener('animationend', onTransitionEnd, opts);\n    unRegTrans = () => {\n      el.removeEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n      el.removeEventListener('animationend', onTransitionEnd, opts);\n    };\n  }\n  return unregister;\n};\n// TODO(FW-2832): type\nconst generateKeyframeRules = (keyframes = []) => {\n  return keyframes.map(keyframe => {\n    const offset = keyframe.offset;\n    const frameString = [];\n    for (const property in keyframe) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (keyframe.hasOwnProperty(property) && property !== 'offset') {\n        frameString.push(`${property}: ${keyframe[property]};`);\n      }\n    }\n    return `${offset * 100}% { ${frameString.join(' ')} }`;\n  }).join(' ');\n};\nconst keyframeIds = [];\nconst generateKeyframeName = keyframeRules => {\n  let index = keyframeIds.indexOf(keyframeRules);\n  if (index < 0) {\n    index = keyframeIds.push(keyframeRules) - 1;\n  }\n  return `ion-animation-${index}`;\n};\nconst getStyleContainer = element => {\n  // getRootNode is not always available in SSR environments.\n  // TODO(FW-2832): types\n  const rootNode = element.getRootNode !== undefined ? element.getRootNode() : element;\n  return rootNode.head || rootNode;\n};\nconst createKeyframeStylesheet = (keyframeName, keyframeRules, element) => {\n  var _a;\n  const styleContainer = getStyleContainer(element);\n  const keyframePrefix = getAnimationPrefix(element);\n  const existingStylesheet = styleContainer.querySelector('#' + keyframeName);\n  if (existingStylesheet) {\n    return existingStylesheet;\n  }\n  const stylesheet = ((_a = element.ownerDocument) !== null && _a !== void 0 ? _a : document).createElement('style');\n  stylesheet.id = keyframeName;\n  stylesheet.textContent = `@${keyframePrefix}keyframes ${keyframeName} { ${keyframeRules} } @${keyframePrefix}keyframes ${keyframeName}-alt { ${keyframeRules} }`;\n  styleContainer.appendChild(stylesheet);\n  return stylesheet;\n};\nconst addClassToArray = (classes = [], className) => {\n  if (className !== undefined) {\n    const classNameToAppend = Array.isArray(className) ? className : [className];\n    return [...classes, ...classNameToAppend];\n  }\n  return classes;\n};\nconst createAnimation = animationId => {\n  let _delay;\n  let _duration;\n  let _easing;\n  let _iterations;\n  let _fill;\n  let _direction;\n  let _keyframes = [];\n  let beforeAddClasses = [];\n  let beforeRemoveClasses = [];\n  let initialized = false;\n  let parentAnimation;\n  let beforeStylesValue = {};\n  let afterAddClasses = [];\n  let afterRemoveClasses = [];\n  let afterStylesValue = {};\n  let numAnimationsRunning = 0;\n  let shouldForceLinearEasing = false;\n  let shouldForceSyncPlayback = false;\n  let cssAnimationsTimerFallback;\n  let forceDirectionValue;\n  let forceDurationValue;\n  let forceDelayValue;\n  let willComplete = true;\n  let finished = false;\n  let shouldCalculateNumAnimations = true;\n  let keyframeName;\n  let ani;\n  let paused = false;\n  const id = animationId;\n  const onFinishCallbacks = [];\n  const onFinishOneTimeCallbacks = [];\n  const onStopOneTimeCallbacks = [];\n  const elements = [];\n  const childAnimations = [];\n  const stylesheets = [];\n  const _beforeAddReadFunctions = [];\n  const _beforeAddWriteFunctions = [];\n  const _afterAddReadFunctions = [];\n  const _afterAddWriteFunctions = [];\n  const webAnimations = [];\n  const supportsAnimationEffect = typeof AnimationEffect === 'function' || win !== undefined && typeof win.AnimationEffect === 'function';\n  const supportsWebAnimations = typeof Element === 'function' && typeof Element.prototype.animate === 'function' && supportsAnimationEffect;\n  const ANIMATION_END_FALLBACK_PADDING_MS = 100;\n  const getWebAnimations = () => {\n    return webAnimations;\n  };\n  const destroy = clearStyleSheets => {\n    childAnimations.forEach(childAnimation => {\n      childAnimation.destroy(clearStyleSheets);\n    });\n    cleanUp(clearStyleSheets);\n    elements.length = 0;\n    childAnimations.length = 0;\n    _keyframes.length = 0;\n    clearOnFinish();\n    initialized = false;\n    shouldCalculateNumAnimations = true;\n    return ani;\n  };\n  /**\n   * Cancels any Web Animations, removes\n   * any animation properties from the\n   * animation's elements, and removes the\n   * animation's stylesheets from the DOM.\n   */\n  const cleanUp = clearStyleSheets => {\n    cleanUpElements();\n    if (clearStyleSheets) {\n      cleanUpStyleSheets();\n    }\n  };\n  const resetFlags = () => {\n    shouldForceLinearEasing = false;\n    shouldForceSyncPlayback = false;\n    shouldCalculateNumAnimations = true;\n    forceDirectionValue = undefined;\n    forceDurationValue = undefined;\n    forceDelayValue = undefined;\n    numAnimationsRunning = 0;\n    finished = false;\n    willComplete = true;\n    paused = false;\n  };\n  const isRunning = () => {\n    return numAnimationsRunning !== 0 && !paused;\n  };\n  /**\n   * @internal\n   * Remove a callback from a chosen callback array\n   * @param callbackToRemove: A reference to the callback that should be removed\n   * @param callbackObjects: An array of callbacks that callbackToRemove should be removed from.\n   */\n  const clearCallback = (callbackToRemove, callbackObjects) => {\n    const index = callbackObjects.findIndex(callbackObject => callbackObject.c === callbackToRemove);\n    if (index > -1) {\n      callbackObjects.splice(index, 1);\n    }\n  };\n  /**\n   * @internal\n   * Add a callback to be fired when an animation is stopped/cancelled.\n   * @param callback: A reference to the callback that should be fired\n   * @param opts: Any options associated with this particular callback\n   */\n  const onStop = (callback, opts) => {\n    onStopOneTimeCallbacks.push({\n      c: callback,\n      o: opts\n    });\n    return ani;\n  };\n  const onFinish = (callback, opts) => {\n    const callbacks = (opts === null || opts === void 0 ? void 0 : opts.oneTimeCallback) ? onFinishOneTimeCallbacks : onFinishCallbacks;\n    callbacks.push({\n      c: callback,\n      o: opts\n    });\n    return ani;\n  };\n  const clearOnFinish = () => {\n    onFinishCallbacks.length = 0;\n    onFinishOneTimeCallbacks.length = 0;\n    return ani;\n  };\n  /**\n   * Cancels any Web Animations and removes\n   * any animation properties from the\n   * the animation's elements.\n   */\n  const cleanUpElements = () => {\n    if (supportsWebAnimations) {\n      webAnimations.forEach(animation => {\n        animation.cancel();\n      });\n      webAnimations.length = 0;\n    } else {\n      const elementsArray = elements.slice();\n      raf(() => {\n        elementsArray.forEach(element => {\n          removeStyleProperty(element, 'animation-name');\n          removeStyleProperty(element, 'animation-duration');\n          removeStyleProperty(element, 'animation-timing-function');\n          removeStyleProperty(element, 'animation-iteration-count');\n          removeStyleProperty(element, 'animation-delay');\n          removeStyleProperty(element, 'animation-play-state');\n          removeStyleProperty(element, 'animation-fill-mode');\n          removeStyleProperty(element, 'animation-direction');\n        });\n      });\n    }\n  };\n  /**\n   * Removes the animation's stylesheets\n   * from the DOM.\n   */\n  const cleanUpStyleSheets = () => {\n    stylesheets.forEach(stylesheet => {\n      /**\n       * When sharing stylesheets, it's possible\n       * for another animation to have already\n       * cleaned up a particular stylesheet\n       */\n      if (stylesheet === null || stylesheet === void 0 ? void 0 : stylesheet.parentNode) {\n        stylesheet.parentNode.removeChild(stylesheet);\n      }\n    });\n    stylesheets.length = 0;\n  };\n  const beforeAddRead = readFn => {\n    _beforeAddReadFunctions.push(readFn);\n    return ani;\n  };\n  const beforeAddWrite = writeFn => {\n    _beforeAddWriteFunctions.push(writeFn);\n    return ani;\n  };\n  const afterAddRead = readFn => {\n    _afterAddReadFunctions.push(readFn);\n    return ani;\n  };\n  const afterAddWrite = writeFn => {\n    _afterAddWriteFunctions.push(writeFn);\n    return ani;\n  };\n  const beforeAddClass = className => {\n    beforeAddClasses = addClassToArray(beforeAddClasses, className);\n    return ani;\n  };\n  const beforeRemoveClass = className => {\n    beforeRemoveClasses = addClassToArray(beforeRemoveClasses, className);\n    return ani;\n  };\n  /**\n   * Set CSS inline styles to the animation's\n   * elements before the animation begins.\n   */\n  const beforeStyles = (styles = {}) => {\n    beforeStylesValue = styles;\n    return ani;\n  };\n  /**\n   * Clear CSS inline styles from the animation's\n   * elements before the animation begins.\n   */\n  const beforeClearStyles = (propertyNames = []) => {\n    for (const property of propertyNames) {\n      beforeStylesValue[property] = '';\n    }\n    return ani;\n  };\n  const afterAddClass = className => {\n    afterAddClasses = addClassToArray(afterAddClasses, className);\n    return ani;\n  };\n  const afterRemoveClass = className => {\n    afterRemoveClasses = addClassToArray(afterRemoveClasses, className);\n    return ani;\n  };\n  const afterStyles = (styles = {}) => {\n    afterStylesValue = styles;\n    return ani;\n  };\n  const afterClearStyles = (propertyNames = []) => {\n    for (const property of propertyNames) {\n      afterStylesValue[property] = '';\n    }\n    return ani;\n  };\n  const getFill = () => {\n    if (_fill !== undefined) {\n      return _fill;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getFill();\n    }\n    return 'both';\n  };\n  const getDirection = () => {\n    if (forceDirectionValue !== undefined) {\n      return forceDirectionValue;\n    }\n    if (_direction !== undefined) {\n      return _direction;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDirection();\n    }\n    return 'normal';\n  };\n  const getEasing = () => {\n    if (shouldForceLinearEasing) {\n      return 'linear';\n    }\n    if (_easing !== undefined) {\n      return _easing;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getEasing();\n    }\n    return 'linear';\n  };\n  const getDuration = () => {\n    if (shouldForceSyncPlayback) {\n      return 0;\n    }\n    if (forceDurationValue !== undefined) {\n      return forceDurationValue;\n    }\n    if (_duration !== undefined) {\n      return _duration;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDuration();\n    }\n    return 0;\n  };\n  const getIterations = () => {\n    if (_iterations !== undefined) {\n      return _iterations;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getIterations();\n    }\n    return 1;\n  };\n  const getDelay = () => {\n    if (forceDelayValue !== undefined) {\n      return forceDelayValue;\n    }\n    if (_delay !== undefined) {\n      return _delay;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDelay();\n    }\n    return 0;\n  };\n  const getKeyframes = () => {\n    return _keyframes;\n  };\n  const direction = animationDirection => {\n    _direction = animationDirection;\n    update(true);\n    return ani;\n  };\n  const fill = animationFill => {\n    _fill = animationFill;\n    update(true);\n    return ani;\n  };\n  const delay = animationDelay => {\n    _delay = animationDelay;\n    update(true);\n    return ani;\n  };\n  const easing = animationEasing => {\n    _easing = animationEasing;\n    update(true);\n    return ani;\n  };\n  const duration = animationDuration => {\n    /**\n     * CSS Animation Durations of 0ms work fine on Chrome\n     * but do not run on Safari, so force it to 1ms to\n     * get it to run on both platforms.\n     */\n    if (!supportsWebAnimations && animationDuration === 0) {\n      animationDuration = 1;\n    }\n    _duration = animationDuration;\n    update(true);\n    return ani;\n  };\n  const iterations = animationIterations => {\n    _iterations = animationIterations;\n    update(true);\n    return ani;\n  };\n  const parent = animation => {\n    parentAnimation = animation;\n    return ani;\n  };\n  const addElement = el => {\n    if (el != null) {\n      if (el.nodeType === 1) {\n        elements.push(el);\n      } else if (el.length >= 0) {\n        for (let i = 0; i < el.length; i++) {\n          elements.push(el[i]);\n        }\n      } else {\n        console.error('Invalid addElement value');\n      }\n    }\n    return ani;\n  };\n  const addAnimation = animationToAdd => {\n    if (animationToAdd != null) {\n      if (Array.isArray(animationToAdd)) {\n        for (const animation of animationToAdd) {\n          animation.parent(ani);\n          childAnimations.push(animation);\n        }\n      } else {\n        animationToAdd.parent(ani);\n        childAnimations.push(animationToAdd);\n      }\n    }\n    return ani;\n  };\n  const keyframes = keyframeValues => {\n    const different = _keyframes !== keyframeValues;\n    _keyframes = keyframeValues;\n    if (different) {\n      updateKeyframes(_keyframes);\n    }\n    return ani;\n  };\n  const updateKeyframes = keyframeValues => {\n    if (supportsWebAnimations) {\n      getWebAnimations().forEach(animation => {\n        /**\n         * animation.effect's type is AnimationEffect.\n         * However, in this case we have a more specific\n         * type of AnimationEffect called KeyframeEffect which\n         * inherits from AnimationEffect. As a result,\n         * we cast animation.effect to KeyframeEffect.\n         */\n        const keyframeEffect = animation.effect;\n        /**\n         * setKeyframes is not supported in all browser\n         * versions that Ionic supports, so we need to\n         * check for support before using it.\n         */\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (keyframeEffect.setKeyframes) {\n          keyframeEffect.setKeyframes(keyframeValues);\n        } else {\n          const newEffect = new KeyframeEffect(keyframeEffect.target, keyframeValues, keyframeEffect.getTiming());\n          animation.effect = newEffect;\n        }\n      });\n    } else {\n      initializeCSSAnimation();\n    }\n  };\n  /**\n   * Run all \"before\" animation hooks.\n   */\n  const beforeAnimation = () => {\n    // Runs all before read callbacks\n    _beforeAddReadFunctions.forEach(callback => callback());\n    // Runs all before write callbacks\n    _beforeAddWriteFunctions.forEach(callback => callback());\n    // Updates styles and classes before animation runs\n    const addClasses = beforeAddClasses;\n    const removeClasses = beforeRemoveClasses;\n    const styles = beforeStylesValue;\n    elements.forEach(el => {\n      const elementClassList = el.classList;\n      addClasses.forEach(c => elementClassList.add(c));\n      removeClasses.forEach(c => elementClassList.remove(c));\n      for (const property in styles) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (styles.hasOwnProperty(property)) {\n          setStyleProperty(el, property, styles[property]);\n        }\n      }\n    });\n  };\n  /**\n   * Run all \"after\" animation hooks.\n   */\n  const afterAnimation = () => {\n    clearCSSAnimationsTimeout();\n    // Runs all after read callbacks\n    _afterAddReadFunctions.forEach(callback => callback());\n    // Runs all after write callbacks\n    _afterAddWriteFunctions.forEach(callback => callback());\n    // Updates styles and classes before animation ends\n    const currentStep = willComplete ? 1 : 0;\n    const addClasses = afterAddClasses;\n    const removeClasses = afterRemoveClasses;\n    const styles = afterStylesValue;\n    elements.forEach(el => {\n      const elementClassList = el.classList;\n      addClasses.forEach(c => elementClassList.add(c));\n      removeClasses.forEach(c => elementClassList.remove(c));\n      for (const property in styles) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (styles.hasOwnProperty(property)) {\n          setStyleProperty(el, property, styles[property]);\n        }\n      }\n    });\n    onFinishCallbacks.forEach(onFinishCallback => {\n      return onFinishCallback.c(currentStep, ani);\n    });\n    onFinishOneTimeCallbacks.forEach(onFinishCallback => {\n      return onFinishCallback.c(currentStep, ani);\n    });\n    onFinishOneTimeCallbacks.length = 0;\n    shouldCalculateNumAnimations = true;\n    if (willComplete) {\n      finished = true;\n    }\n    willComplete = true;\n  };\n  const animationFinish = () => {\n    if (numAnimationsRunning === 0) {\n      return;\n    }\n    numAnimationsRunning--;\n    if (numAnimationsRunning === 0) {\n      afterAnimation();\n      if (parentAnimation) {\n        parentAnimation.animationFinish();\n      }\n    }\n  };\n  const initializeCSSAnimation = (toggleAnimationName = true) => {\n    cleanUpStyleSheets();\n    const processedKeyframes = processKeyframes(_keyframes);\n    elements.forEach(element => {\n      if (processedKeyframes.length > 0) {\n        const keyframeRules = generateKeyframeRules(processedKeyframes);\n        keyframeName = animationId !== undefined ? animationId : generateKeyframeName(keyframeRules);\n        const stylesheet = createKeyframeStylesheet(keyframeName, keyframeRules, element);\n        stylesheets.push(stylesheet);\n        setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n        setStyleProperty(element, 'animation-timing-function', getEasing());\n        setStyleProperty(element, 'animation-delay', `${getDelay()}ms`);\n        setStyleProperty(element, 'animation-fill-mode', getFill());\n        setStyleProperty(element, 'animation-direction', getDirection());\n        const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n        setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n        setStyleProperty(element, 'animation-play-state', 'paused');\n        if (toggleAnimationName) {\n          setStyleProperty(element, 'animation-name', `${stylesheet.id}-alt`);\n        }\n        raf(() => {\n          setStyleProperty(element, 'animation-name', stylesheet.id || null);\n        });\n      }\n    });\n  };\n  const initializeWebAnimation = () => {\n    elements.forEach(element => {\n      const animation = element.animate(_keyframes, {\n        id,\n        delay: getDelay(),\n        duration: getDuration(),\n        easing: getEasing(),\n        iterations: getIterations(),\n        fill: getFill(),\n        direction: getDirection()\n      });\n      animation.pause();\n      webAnimations.push(animation);\n    });\n    if (webAnimations.length > 0) {\n      webAnimations[0].onfinish = () => {\n        animationFinish();\n      };\n    }\n  };\n  const initializeAnimation = (toggleAnimationName = true) => {\n    beforeAnimation();\n    if (_keyframes.length > 0) {\n      if (supportsWebAnimations) {\n        initializeWebAnimation();\n      } else {\n        initializeCSSAnimation(toggleAnimationName);\n      }\n    }\n    initialized = true;\n  };\n  const setAnimationStep = step => {\n    step = Math.min(Math.max(step, 0), 0.9999);\n    if (supportsWebAnimations) {\n      webAnimations.forEach(animation => {\n        // When creating the animation the delay is guaranteed to be set to a number.\n        animation.currentTime = animation.effect.getComputedTiming().delay + getDuration() * step;\n        animation.pause();\n      });\n    } else {\n      const animationDuration = `-${getDuration() * step}ms`;\n      elements.forEach(element => {\n        if (_keyframes.length > 0) {\n          setStyleProperty(element, 'animation-delay', animationDuration);\n          setStyleProperty(element, 'animation-play-state', 'paused');\n        }\n      });\n    }\n  };\n  const updateWebAnimation = step => {\n    webAnimations.forEach(animation => {\n      animation.effect.updateTiming({\n        delay: getDelay(),\n        duration: getDuration(),\n        easing: getEasing(),\n        iterations: getIterations(),\n        fill: getFill(),\n        direction: getDirection()\n      });\n    });\n    if (step !== undefined) {\n      setAnimationStep(step);\n    }\n  };\n  const updateCSSAnimation = (toggleAnimationName = true, step) => {\n    raf(() => {\n      elements.forEach(element => {\n        setStyleProperty(element, 'animation-name', keyframeName || null);\n        setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n        setStyleProperty(element, 'animation-timing-function', getEasing());\n        setStyleProperty(element, 'animation-delay', step !== undefined ? `-${step * getDuration()}ms` : `${getDelay()}ms`);\n        setStyleProperty(element, 'animation-fill-mode', getFill() || null);\n        setStyleProperty(element, 'animation-direction', getDirection() || null);\n        const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n        setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n        if (toggleAnimationName) {\n          setStyleProperty(element, 'animation-name', `${keyframeName}-alt`);\n        }\n        raf(() => {\n          setStyleProperty(element, 'animation-name', keyframeName || null);\n        });\n      });\n    });\n  };\n  const update = (deep = false, toggleAnimationName = true, step) => {\n    if (deep) {\n      childAnimations.forEach(animation => {\n        animation.update(deep, toggleAnimationName, step);\n      });\n    }\n    if (supportsWebAnimations) {\n      updateWebAnimation(step);\n    } else {\n      updateCSSAnimation(toggleAnimationName, step);\n    }\n    return ani;\n  };\n  const progressStart = (forceLinearEasing = false, step) => {\n    childAnimations.forEach(animation => {\n      animation.progressStart(forceLinearEasing, step);\n    });\n    pauseAnimation();\n    shouldForceLinearEasing = forceLinearEasing;\n    if (!initialized) {\n      initializeAnimation();\n    }\n    update(false, true, step);\n    return ani;\n  };\n  const progressStep = step => {\n    childAnimations.forEach(animation => {\n      animation.progressStep(step);\n    });\n    setAnimationStep(step);\n    return ani;\n  };\n  const progressEnd = (playTo, step, dur) => {\n    shouldForceLinearEasing = false;\n    childAnimations.forEach(animation => {\n      animation.progressEnd(playTo, step, dur);\n    });\n    if (dur !== undefined) {\n      forceDurationValue = dur;\n    }\n    finished = false;\n    willComplete = true;\n    if (playTo === 0) {\n      forceDirectionValue = getDirection() === 'reverse' ? 'normal' : 'reverse';\n      if (forceDirectionValue === 'reverse') {\n        willComplete = false;\n      }\n      if (supportsWebAnimations) {\n        update();\n        setAnimationStep(1 - step);\n      } else {\n        forceDelayValue = (1 - step) * getDuration() * -1;\n        update(false, false);\n      }\n    } else if (playTo === 1) {\n      if (supportsWebAnimations) {\n        update();\n        setAnimationStep(step);\n      } else {\n        forceDelayValue = step * getDuration() * -1;\n        update(false, false);\n      }\n    }\n    if (playTo !== undefined) {\n      onFinish(() => {\n        forceDurationValue = undefined;\n        forceDirectionValue = undefined;\n        forceDelayValue = undefined;\n      }, {\n        oneTimeCallback: true\n      });\n      if (!parentAnimation) {\n        play();\n      }\n    }\n    return ani;\n  };\n  const pauseAnimation = () => {\n    if (initialized) {\n      if (supportsWebAnimations) {\n        webAnimations.forEach(animation => {\n          animation.pause();\n        });\n      } else {\n        elements.forEach(element => {\n          setStyleProperty(element, 'animation-play-state', 'paused');\n        });\n      }\n      paused = true;\n    }\n  };\n  const pause = () => {\n    childAnimations.forEach(animation => {\n      animation.pause();\n    });\n    pauseAnimation();\n    return ani;\n  };\n  const onAnimationEndFallback = () => {\n    cssAnimationsTimerFallback = undefined;\n    animationFinish();\n  };\n  const clearCSSAnimationsTimeout = () => {\n    if (cssAnimationsTimerFallback) {\n      clearTimeout(cssAnimationsTimerFallback);\n    }\n  };\n  const playCSSAnimations = () => {\n    clearCSSAnimationsTimeout();\n    raf(() => {\n      elements.forEach(element => {\n        if (_keyframes.length > 0) {\n          setStyleProperty(element, 'animation-play-state', 'running');\n        }\n      });\n    });\n    if (_keyframes.length === 0 || elements.length === 0) {\n      animationFinish();\n    } else {\n      /**\n       * This is a catchall in the event that a CSS Animation did not finish.\n       * The Web Animations API has mechanisms in place for preventing this.\n       * CSS Animations will not fire an `animationend` event\n       * for elements with `display: none`. The Web Animations API\n       * accounts for this, but using raw CSS Animations requires\n       * this workaround.\n       */\n      const animationDelay = getDelay() || 0;\n      const animationDuration = getDuration() || 0;\n      const animationIterations = getIterations() || 1;\n      // No need to set a timeout when animation has infinite iterations\n      if (isFinite(animationIterations)) {\n        cssAnimationsTimerFallback = setTimeout(onAnimationEndFallback, animationDelay + animationDuration * animationIterations + ANIMATION_END_FALLBACK_PADDING_MS);\n      }\n      animationEnd(elements[0], () => {\n        clearCSSAnimationsTimeout();\n        /**\n         * Ensure that clean up\n         * is always done a frame\n         * before the onFinish handlers\n         * are fired. Otherwise, there\n         * may be flickering if a new\n         * animation is started on the same\n         * element too quickly\n         */\n        raf(() => {\n          clearCSSAnimationPlayState();\n          raf(animationFinish);\n        });\n      });\n    }\n  };\n  const clearCSSAnimationPlayState = () => {\n    elements.forEach(element => {\n      removeStyleProperty(element, 'animation-duration');\n      removeStyleProperty(element, 'animation-delay');\n      removeStyleProperty(element, 'animation-play-state');\n    });\n  };\n  const playWebAnimations = () => {\n    webAnimations.forEach(animation => {\n      animation.play();\n    });\n    if (_keyframes.length === 0 || elements.length === 0) {\n      animationFinish();\n    }\n  };\n  const resetAnimation = () => {\n    if (supportsWebAnimations) {\n      setAnimationStep(0);\n      updateWebAnimation();\n    } else {\n      updateCSSAnimation();\n    }\n  };\n  const play = opts => {\n    return new Promise(resolve => {\n      if (opts === null || opts === void 0 ? void 0 : opts.sync) {\n        shouldForceSyncPlayback = true;\n        onFinish(() => shouldForceSyncPlayback = false, {\n          oneTimeCallback: true\n        });\n      }\n      if (!initialized) {\n        initializeAnimation();\n      }\n      if (finished) {\n        resetAnimation();\n        finished = false;\n      }\n      if (shouldCalculateNumAnimations) {\n        numAnimationsRunning = childAnimations.length + 1;\n        shouldCalculateNumAnimations = false;\n      }\n      /**\n       * When one of these callbacks fires we\n       * need to clear the other's callback otherwise\n       * you can potentially get these callbacks\n       * firing multiple times if the play method\n       * is subsequently called.\n       * Example:\n       * animation.play() (onStop and onFinish callbacks are registered)\n       * animation.stop() (onStop callback is fired, onFinish is not)\n       * animation.play() (onStop and onFinish callbacks are registered)\n       * Total onStop callbacks: 1\n       * Total onFinish callbacks: 2\n       */\n      const onStopCallback = () => {\n        clearCallback(onFinishCallback, onFinishOneTimeCallbacks);\n        resolve();\n      };\n      const onFinishCallback = () => {\n        clearCallback(onStopCallback, onStopOneTimeCallbacks);\n        resolve();\n      };\n      /**\n       * The play method resolves when an animation\n       * run either finishes or is cancelled.\n       */\n      onFinish(onFinishCallback, {\n        oneTimeCallback: true\n      });\n      onStop(onStopCallback, {\n        oneTimeCallback: true\n      });\n      childAnimations.forEach(animation => {\n        animation.play();\n      });\n      if (supportsWebAnimations) {\n        playWebAnimations();\n      } else {\n        playCSSAnimations();\n      }\n      paused = false;\n    });\n  };\n  /**\n   * Stops an animation and resets it state to the\n   * beginning. This does not fire any onFinish\n   * callbacks because the animation did not finish.\n   * However, since the animation was not destroyed\n   * (i.e. the animation could run again) we do not\n   * clear the onFinish callbacks.\n   */\n  const stop = () => {\n    childAnimations.forEach(animation => {\n      animation.stop();\n    });\n    if (initialized) {\n      cleanUpElements();\n      initialized = false;\n    }\n    resetFlags();\n    onStopOneTimeCallbacks.forEach(onStopCallback => onStopCallback.c(0, ani));\n    onStopOneTimeCallbacks.length = 0;\n  };\n  const from = (property, value) => {\n    const firstFrame = _keyframes[0];\n    if (firstFrame !== undefined && (firstFrame.offset === undefined || firstFrame.offset === 0)) {\n      firstFrame[property] = value;\n    } else {\n      _keyframes = [{\n        offset: 0,\n        [property]: value\n      }, ..._keyframes];\n    }\n    return ani;\n  };\n  const to = (property, value) => {\n    const lastFrame = _keyframes[_keyframes.length - 1];\n    if (lastFrame !== undefined && (lastFrame.offset === undefined || lastFrame.offset === 1)) {\n      lastFrame[property] = value;\n    } else {\n      _keyframes = [..._keyframes, {\n        offset: 1,\n        [property]: value\n      }];\n    }\n    return ani;\n  };\n  const fromTo = (property, fromValue, toValue) => {\n    return from(property, fromValue).to(property, toValue);\n  };\n  return ani = {\n    parentAnimation,\n    elements,\n    childAnimations,\n    id,\n    animationFinish,\n    from,\n    to,\n    fromTo,\n    parent,\n    play,\n    pause,\n    stop,\n    destroy,\n    keyframes,\n    addAnimation,\n    addElement,\n    update,\n    fill,\n    direction,\n    iterations,\n    duration,\n    easing,\n    delay,\n    getWebAnimations,\n    getKeyframes,\n    getFill,\n    getDirection,\n    getDelay,\n    getIterations,\n    getEasing,\n    getDuration,\n    afterAddRead,\n    afterAddWrite,\n    afterClearStyles,\n    afterStyles,\n    afterRemoveClass,\n    afterAddClass,\n    beforeAddRead,\n    beforeAddWrite,\n    beforeClearStyles,\n    beforeStyles,\n    beforeRemoveClass,\n    beforeAddClass,\n    onFinish,\n    isRunning,\n    progressStart,\n    progressStep,\n    progressEnd\n  };\n};\nexport { createAnimation as c };","map":{"version":3,"names":["w","win","r","raf","animationPrefix","processKeyframes","keyframes","forEach","keyframe","key","hasOwnProperty","value","newKey","convertCamelCaseToHypen","str","replace","toLowerCase","getAnimationPrefix","el","undefined","supportsUnprefixed","style","animationName","supportsWebkitPrefix","webkitAnimationName","setStyleProperty","element","propertyName","prefix","startsWith","setProperty","removeStyleProperty","removeProperty","animationEnd","callback","unRegTrans","opts","passive","unregister","onTransitionEnd","ev","target","addEventListener","removeEventListener","generateKeyframeRules","map","offset","frameString","property","push","join","keyframeIds","generateKeyframeName","keyframeRules","index","indexOf","getStyleContainer","rootNode","getRootNode","head","createKeyframeStylesheet","keyframeName","_a","styleContainer","keyframePrefix","existingStylesheet","querySelector","stylesheet","ownerDocument","document","createElement","id","textContent","appendChild","addClassToArray","classes","className","classNameToAppend","Array","isArray","createAnimation","animationId","_delay","_duration","_easing","_iterations","_fill","_direction","_keyframes","beforeAddClasses","beforeRemoveClasses","initialized","parentAnimation","beforeStylesValue","afterAddClasses","afterRemoveClasses","afterStylesValue","numAnimationsRunning","shouldForceLinearEasing","shouldForceSyncPlayback","cssAnimationsTimerFallback","forceDirectionValue","forceDurationValue","forceDelayValue","willComplete","finished","shouldCalculateNumAnimations","ani","paused","onFinishCallbacks","onFinishOneTimeCallbacks","onStopOneTimeCallbacks","elements","childAnimations","stylesheets","_beforeAddReadFunctions","_beforeAddWriteFunctions","_afterAddReadFunctions","_afterAddWriteFunctions","webAnimations","supportsAnimationEffect","AnimationEffect","supportsWebAnimations","Element","prototype","animate","ANIMATION_END_FALLBACK_PADDING_MS","getWebAnimations","destroy","clearStyleSheets","childAnimation","cleanUp","length","clearOnFinish","cleanUpElements","cleanUpStyleSheets","resetFlags","isRunning","clearCallback","callbackToRemove","callbackObjects","findIndex","callbackObject","c","splice","onStop","o","onFinish","callbacks","oneTimeCallback","animation","cancel","elementsArray","slice","parentNode","removeChild","beforeAddRead","readFn","beforeAddWrite","writeFn","afterAddRead","afterAddWrite","beforeAddClass","beforeRemoveClass","beforeStyles","styles","beforeClearStyles","propertyNames","afterAddClass","afterRemoveClass","afterStyles","afterClearStyles","getFill","getDirection","getEasing","getDuration","getIterations","getDelay","getKeyframes","direction","animationDirection","update","fill","animationFill","delay","animationDelay","easing","animationEasing","duration","animationDuration","iterations","animationIterations","parent","addElement","nodeType","i","console","error","addAnimation","animationToAdd","keyframeValues","different","updateKeyframes","keyframeEffect","effect","setKeyframes","newEffect","KeyframeEffect","getTiming","initializeCSSAnimation","beforeAnimation","addClasses","removeClasses","elementClassList","classList","add","remove","afterAnimation","clearCSSAnimationsTimeout","currentStep","onFinishCallback","animationFinish","toggleAnimationName","processedKeyframes","iterationsCount","Infinity","toString","initializeWebAnimation","pause","onfinish","initializeAnimation","setAnimationStep","step","Math","min","max","currentTime","getComputedTiming","updateWebAnimation","updateTiming","updateCSSAnimation","deep","progressStart","forceLinearEasing","pauseAnimation","progressStep","progressEnd","playTo","dur","play","onAnimationEndFallback","clearTimeout","playCSSAnimations","isFinite","setTimeout","clearCSSAnimationPlayState","playWebAnimations","resetAnimation","Promise","resolve","sync","onStopCallback","stop","from","firstFrame","to","lastFrame","fromTo","fromValue","toValue"],"sources":["/Users/raphaelboullay/Documents/GitHub/Anime-sama-mobile-app/node_modules/@ionic/core/components/animation.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { w as win } from './index5.js';\nimport { r as raf } from './helpers.js';\n\nlet animationPrefix;\n/**\n * Web Animations requires hyphenated CSS properties\n * to be written in camelCase when animating\n */\nconst processKeyframes = (keyframes) => {\n  keyframes.forEach((keyframe) => {\n    for (const key in keyframe) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (keyframe.hasOwnProperty(key)) {\n        const value = keyframe[key];\n        if (key === 'easing') {\n          const newKey = 'animation-timing-function';\n          keyframe[newKey] = value;\n          delete keyframe[key];\n        }\n        else {\n          const newKey = convertCamelCaseToHypen(key);\n          if (newKey !== key) {\n            keyframe[newKey] = value;\n            delete keyframe[key];\n          }\n        }\n      }\n    }\n  });\n  return keyframes;\n};\nconst convertCamelCaseToHypen = (str) => {\n  return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n};\nconst getAnimationPrefix = (el) => {\n  if (animationPrefix === undefined) {\n    const supportsUnprefixed = el.style.animationName !== undefined;\n    const supportsWebkitPrefix = el.style.webkitAnimationName !== undefined;\n    animationPrefix = !supportsUnprefixed && supportsWebkitPrefix ? '-webkit-' : '';\n  }\n  return animationPrefix;\n};\nconst setStyleProperty = (element, propertyName, value) => {\n  const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n  element.style.setProperty(prefix + propertyName, value);\n};\nconst removeStyleProperty = (element, propertyName) => {\n  const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n  element.style.removeProperty(prefix + propertyName);\n};\nconst animationEnd = (el, callback) => {\n  let unRegTrans;\n  const opts = { passive: true };\n  const unregister = () => {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n  const onTransitionEnd = (ev) => {\n    if (el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n  if (el) {\n    el.addEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n    el.addEventListener('animationend', onTransitionEnd, opts);\n    unRegTrans = () => {\n      el.removeEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n      el.removeEventListener('animationend', onTransitionEnd, opts);\n    };\n  }\n  return unregister;\n};\n// TODO(FW-2832): type\nconst generateKeyframeRules = (keyframes = []) => {\n  return keyframes\n    .map((keyframe) => {\n    const offset = keyframe.offset;\n    const frameString = [];\n    for (const property in keyframe) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (keyframe.hasOwnProperty(property) && property !== 'offset') {\n        frameString.push(`${property}: ${keyframe[property]};`);\n      }\n    }\n    return `${offset * 100}% { ${frameString.join(' ')} }`;\n  })\n    .join(' ');\n};\nconst keyframeIds = [];\nconst generateKeyframeName = (keyframeRules) => {\n  let index = keyframeIds.indexOf(keyframeRules);\n  if (index < 0) {\n    index = keyframeIds.push(keyframeRules) - 1;\n  }\n  return `ion-animation-${index}`;\n};\nconst getStyleContainer = (element) => {\n  // getRootNode is not always available in SSR environments.\n  // TODO(FW-2832): types\n  const rootNode = element.getRootNode !== undefined ? element.getRootNode() : element;\n  return rootNode.head || rootNode;\n};\nconst createKeyframeStylesheet = (keyframeName, keyframeRules, element) => {\n  var _a;\n  const styleContainer = getStyleContainer(element);\n  const keyframePrefix = getAnimationPrefix(element);\n  const existingStylesheet = styleContainer.querySelector('#' + keyframeName);\n  if (existingStylesheet) {\n    return existingStylesheet;\n  }\n  const stylesheet = ((_a = element.ownerDocument) !== null && _a !== void 0 ? _a : document).createElement('style');\n  stylesheet.id = keyframeName;\n  stylesheet.textContent = `@${keyframePrefix}keyframes ${keyframeName} { ${keyframeRules} } @${keyframePrefix}keyframes ${keyframeName}-alt { ${keyframeRules} }`;\n  styleContainer.appendChild(stylesheet);\n  return stylesheet;\n};\nconst addClassToArray = (classes = [], className) => {\n  if (className !== undefined) {\n    const classNameToAppend = Array.isArray(className) ? className : [className];\n    return [...classes, ...classNameToAppend];\n  }\n  return classes;\n};\n\nconst createAnimation = (animationId) => {\n  let _delay;\n  let _duration;\n  let _easing;\n  let _iterations;\n  let _fill;\n  let _direction;\n  let _keyframes = [];\n  let beforeAddClasses = [];\n  let beforeRemoveClasses = [];\n  let initialized = false;\n  let parentAnimation;\n  let beforeStylesValue = {};\n  let afterAddClasses = [];\n  let afterRemoveClasses = [];\n  let afterStylesValue = {};\n  let numAnimationsRunning = 0;\n  let shouldForceLinearEasing = false;\n  let shouldForceSyncPlayback = false;\n  let cssAnimationsTimerFallback;\n  let forceDirectionValue;\n  let forceDurationValue;\n  let forceDelayValue;\n  let willComplete = true;\n  let finished = false;\n  let shouldCalculateNumAnimations = true;\n  let keyframeName;\n  let ani;\n  let paused = false;\n  const id = animationId;\n  const onFinishCallbacks = [];\n  const onFinishOneTimeCallbacks = [];\n  const onStopOneTimeCallbacks = [];\n  const elements = [];\n  const childAnimations = [];\n  const stylesheets = [];\n  const _beforeAddReadFunctions = [];\n  const _beforeAddWriteFunctions = [];\n  const _afterAddReadFunctions = [];\n  const _afterAddWriteFunctions = [];\n  const webAnimations = [];\n  const supportsAnimationEffect = typeof AnimationEffect === 'function' ||\n    (win !== undefined && typeof win.AnimationEffect === 'function');\n  const supportsWebAnimations = typeof Element === 'function' &&\n    typeof Element.prototype.animate === 'function' &&\n    supportsAnimationEffect;\n  const ANIMATION_END_FALLBACK_PADDING_MS = 100;\n  const getWebAnimations = () => {\n    return webAnimations;\n  };\n  const destroy = (clearStyleSheets) => {\n    childAnimations.forEach((childAnimation) => {\n      childAnimation.destroy(clearStyleSheets);\n    });\n    cleanUp(clearStyleSheets);\n    elements.length = 0;\n    childAnimations.length = 0;\n    _keyframes.length = 0;\n    clearOnFinish();\n    initialized = false;\n    shouldCalculateNumAnimations = true;\n    return ani;\n  };\n  /**\n   * Cancels any Web Animations, removes\n   * any animation properties from the\n   * animation's elements, and removes the\n   * animation's stylesheets from the DOM.\n   */\n  const cleanUp = (clearStyleSheets) => {\n    cleanUpElements();\n    if (clearStyleSheets) {\n      cleanUpStyleSheets();\n    }\n  };\n  const resetFlags = () => {\n    shouldForceLinearEasing = false;\n    shouldForceSyncPlayback = false;\n    shouldCalculateNumAnimations = true;\n    forceDirectionValue = undefined;\n    forceDurationValue = undefined;\n    forceDelayValue = undefined;\n    numAnimationsRunning = 0;\n    finished = false;\n    willComplete = true;\n    paused = false;\n  };\n  const isRunning = () => {\n    return numAnimationsRunning !== 0 && !paused;\n  };\n  /**\n   * @internal\n   * Remove a callback from a chosen callback array\n   * @param callbackToRemove: A reference to the callback that should be removed\n   * @param callbackObjects: An array of callbacks that callbackToRemove should be removed from.\n   */\n  const clearCallback = (callbackToRemove, callbackObjects) => {\n    const index = callbackObjects.findIndex((callbackObject) => callbackObject.c === callbackToRemove);\n    if (index > -1) {\n      callbackObjects.splice(index, 1);\n    }\n  };\n  /**\n   * @internal\n   * Add a callback to be fired when an animation is stopped/cancelled.\n   * @param callback: A reference to the callback that should be fired\n   * @param opts: Any options associated with this particular callback\n   */\n  const onStop = (callback, opts) => {\n    onStopOneTimeCallbacks.push({ c: callback, o: opts });\n    return ani;\n  };\n  const onFinish = (callback, opts) => {\n    const callbacks = (opts === null || opts === void 0 ? void 0 : opts.oneTimeCallback) ? onFinishOneTimeCallbacks : onFinishCallbacks;\n    callbacks.push({ c: callback, o: opts });\n    return ani;\n  };\n  const clearOnFinish = () => {\n    onFinishCallbacks.length = 0;\n    onFinishOneTimeCallbacks.length = 0;\n    return ani;\n  };\n  /**\n   * Cancels any Web Animations and removes\n   * any animation properties from the\n   * the animation's elements.\n   */\n  const cleanUpElements = () => {\n    if (supportsWebAnimations) {\n      webAnimations.forEach((animation) => {\n        animation.cancel();\n      });\n      webAnimations.length = 0;\n    }\n    else {\n      const elementsArray = elements.slice();\n      raf(() => {\n        elementsArray.forEach((element) => {\n          removeStyleProperty(element, 'animation-name');\n          removeStyleProperty(element, 'animation-duration');\n          removeStyleProperty(element, 'animation-timing-function');\n          removeStyleProperty(element, 'animation-iteration-count');\n          removeStyleProperty(element, 'animation-delay');\n          removeStyleProperty(element, 'animation-play-state');\n          removeStyleProperty(element, 'animation-fill-mode');\n          removeStyleProperty(element, 'animation-direction');\n        });\n      });\n    }\n  };\n  /**\n   * Removes the animation's stylesheets\n   * from the DOM.\n   */\n  const cleanUpStyleSheets = () => {\n    stylesheets.forEach((stylesheet) => {\n      /**\n       * When sharing stylesheets, it's possible\n       * for another animation to have already\n       * cleaned up a particular stylesheet\n       */\n      if (stylesheet === null || stylesheet === void 0 ? void 0 : stylesheet.parentNode) {\n        stylesheet.parentNode.removeChild(stylesheet);\n      }\n    });\n    stylesheets.length = 0;\n  };\n  const beforeAddRead = (readFn) => {\n    _beforeAddReadFunctions.push(readFn);\n    return ani;\n  };\n  const beforeAddWrite = (writeFn) => {\n    _beforeAddWriteFunctions.push(writeFn);\n    return ani;\n  };\n  const afterAddRead = (readFn) => {\n    _afterAddReadFunctions.push(readFn);\n    return ani;\n  };\n  const afterAddWrite = (writeFn) => {\n    _afterAddWriteFunctions.push(writeFn);\n    return ani;\n  };\n  const beforeAddClass = (className) => {\n    beforeAddClasses = addClassToArray(beforeAddClasses, className);\n    return ani;\n  };\n  const beforeRemoveClass = (className) => {\n    beforeRemoveClasses = addClassToArray(beforeRemoveClasses, className);\n    return ani;\n  };\n  /**\n   * Set CSS inline styles to the animation's\n   * elements before the animation begins.\n   */\n  const beforeStyles = (styles = {}) => {\n    beforeStylesValue = styles;\n    return ani;\n  };\n  /**\n   * Clear CSS inline styles from the animation's\n   * elements before the animation begins.\n   */\n  const beforeClearStyles = (propertyNames = []) => {\n    for (const property of propertyNames) {\n      beforeStylesValue[property] = '';\n    }\n    return ani;\n  };\n  const afterAddClass = (className) => {\n    afterAddClasses = addClassToArray(afterAddClasses, className);\n    return ani;\n  };\n  const afterRemoveClass = (className) => {\n    afterRemoveClasses = addClassToArray(afterRemoveClasses, className);\n    return ani;\n  };\n  const afterStyles = (styles = {}) => {\n    afterStylesValue = styles;\n    return ani;\n  };\n  const afterClearStyles = (propertyNames = []) => {\n    for (const property of propertyNames) {\n      afterStylesValue[property] = '';\n    }\n    return ani;\n  };\n  const getFill = () => {\n    if (_fill !== undefined) {\n      return _fill;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getFill();\n    }\n    return 'both';\n  };\n  const getDirection = () => {\n    if (forceDirectionValue !== undefined) {\n      return forceDirectionValue;\n    }\n    if (_direction !== undefined) {\n      return _direction;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDirection();\n    }\n    return 'normal';\n  };\n  const getEasing = () => {\n    if (shouldForceLinearEasing) {\n      return 'linear';\n    }\n    if (_easing !== undefined) {\n      return _easing;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getEasing();\n    }\n    return 'linear';\n  };\n  const getDuration = () => {\n    if (shouldForceSyncPlayback) {\n      return 0;\n    }\n    if (forceDurationValue !== undefined) {\n      return forceDurationValue;\n    }\n    if (_duration !== undefined) {\n      return _duration;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDuration();\n    }\n    return 0;\n  };\n  const getIterations = () => {\n    if (_iterations !== undefined) {\n      return _iterations;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getIterations();\n    }\n    return 1;\n  };\n  const getDelay = () => {\n    if (forceDelayValue !== undefined) {\n      return forceDelayValue;\n    }\n    if (_delay !== undefined) {\n      return _delay;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDelay();\n    }\n    return 0;\n  };\n  const getKeyframes = () => {\n    return _keyframes;\n  };\n  const direction = (animationDirection) => {\n    _direction = animationDirection;\n    update(true);\n    return ani;\n  };\n  const fill = (animationFill) => {\n    _fill = animationFill;\n    update(true);\n    return ani;\n  };\n  const delay = (animationDelay) => {\n    _delay = animationDelay;\n    update(true);\n    return ani;\n  };\n  const easing = (animationEasing) => {\n    _easing = animationEasing;\n    update(true);\n    return ani;\n  };\n  const duration = (animationDuration) => {\n    /**\n     * CSS Animation Durations of 0ms work fine on Chrome\n     * but do not run on Safari, so force it to 1ms to\n     * get it to run on both platforms.\n     */\n    if (!supportsWebAnimations && animationDuration === 0) {\n      animationDuration = 1;\n    }\n    _duration = animationDuration;\n    update(true);\n    return ani;\n  };\n  const iterations = (animationIterations) => {\n    _iterations = animationIterations;\n    update(true);\n    return ani;\n  };\n  const parent = (animation) => {\n    parentAnimation = animation;\n    return ani;\n  };\n  const addElement = (el) => {\n    if (el != null) {\n      if (el.nodeType === 1) {\n        elements.push(el);\n      }\n      else if (el.length >= 0) {\n        for (let i = 0; i < el.length; i++) {\n          elements.push(el[i]);\n        }\n      }\n      else {\n        console.error('Invalid addElement value');\n      }\n    }\n    return ani;\n  };\n  const addAnimation = (animationToAdd) => {\n    if (animationToAdd != null) {\n      if (Array.isArray(animationToAdd)) {\n        for (const animation of animationToAdd) {\n          animation.parent(ani);\n          childAnimations.push(animation);\n        }\n      }\n      else {\n        animationToAdd.parent(ani);\n        childAnimations.push(animationToAdd);\n      }\n    }\n    return ani;\n  };\n  const keyframes = (keyframeValues) => {\n    const different = _keyframes !== keyframeValues;\n    _keyframes = keyframeValues;\n    if (different) {\n      updateKeyframes(_keyframes);\n    }\n    return ani;\n  };\n  const updateKeyframes = (keyframeValues) => {\n    if (supportsWebAnimations) {\n      getWebAnimations().forEach((animation) => {\n        /**\n         * animation.effect's type is AnimationEffect.\n         * However, in this case we have a more specific\n         * type of AnimationEffect called KeyframeEffect which\n         * inherits from AnimationEffect. As a result,\n         * we cast animation.effect to KeyframeEffect.\n         */\n        const keyframeEffect = animation.effect;\n        /**\n         * setKeyframes is not supported in all browser\n         * versions that Ionic supports, so we need to\n         * check for support before using it.\n         */\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (keyframeEffect.setKeyframes) {\n          keyframeEffect.setKeyframes(keyframeValues);\n        }\n        else {\n          const newEffect = new KeyframeEffect(keyframeEffect.target, keyframeValues, keyframeEffect.getTiming());\n          animation.effect = newEffect;\n        }\n      });\n    }\n    else {\n      initializeCSSAnimation();\n    }\n  };\n  /**\n   * Run all \"before\" animation hooks.\n   */\n  const beforeAnimation = () => {\n    // Runs all before read callbacks\n    _beforeAddReadFunctions.forEach((callback) => callback());\n    // Runs all before write callbacks\n    _beforeAddWriteFunctions.forEach((callback) => callback());\n    // Updates styles and classes before animation runs\n    const addClasses = beforeAddClasses;\n    const removeClasses = beforeRemoveClasses;\n    const styles = beforeStylesValue;\n    elements.forEach((el) => {\n      const elementClassList = el.classList;\n      addClasses.forEach((c) => elementClassList.add(c));\n      removeClasses.forEach((c) => elementClassList.remove(c));\n      for (const property in styles) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (styles.hasOwnProperty(property)) {\n          setStyleProperty(el, property, styles[property]);\n        }\n      }\n    });\n  };\n  /**\n   * Run all \"after\" animation hooks.\n   */\n  const afterAnimation = () => {\n    clearCSSAnimationsTimeout();\n    // Runs all after read callbacks\n    _afterAddReadFunctions.forEach((callback) => callback());\n    // Runs all after write callbacks\n    _afterAddWriteFunctions.forEach((callback) => callback());\n    // Updates styles and classes before animation ends\n    const currentStep = willComplete ? 1 : 0;\n    const addClasses = afterAddClasses;\n    const removeClasses = afterRemoveClasses;\n    const styles = afterStylesValue;\n    elements.forEach((el) => {\n      const elementClassList = el.classList;\n      addClasses.forEach((c) => elementClassList.add(c));\n      removeClasses.forEach((c) => elementClassList.remove(c));\n      for (const property in styles) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (styles.hasOwnProperty(property)) {\n          setStyleProperty(el, property, styles[property]);\n        }\n      }\n    });\n    onFinishCallbacks.forEach((onFinishCallback) => {\n      return onFinishCallback.c(currentStep, ani);\n    });\n    onFinishOneTimeCallbacks.forEach((onFinishCallback) => {\n      return onFinishCallback.c(currentStep, ani);\n    });\n    onFinishOneTimeCallbacks.length = 0;\n    shouldCalculateNumAnimations = true;\n    if (willComplete) {\n      finished = true;\n    }\n    willComplete = true;\n  };\n  const animationFinish = () => {\n    if (numAnimationsRunning === 0) {\n      return;\n    }\n    numAnimationsRunning--;\n    if (numAnimationsRunning === 0) {\n      afterAnimation();\n      if (parentAnimation) {\n        parentAnimation.animationFinish();\n      }\n    }\n  };\n  const initializeCSSAnimation = (toggleAnimationName = true) => {\n    cleanUpStyleSheets();\n    const processedKeyframes = processKeyframes(_keyframes);\n    elements.forEach((element) => {\n      if (processedKeyframes.length > 0) {\n        const keyframeRules = generateKeyframeRules(processedKeyframes);\n        keyframeName = animationId !== undefined ? animationId : generateKeyframeName(keyframeRules);\n        const stylesheet = createKeyframeStylesheet(keyframeName, keyframeRules, element);\n        stylesheets.push(stylesheet);\n        setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n        setStyleProperty(element, 'animation-timing-function', getEasing());\n        setStyleProperty(element, 'animation-delay', `${getDelay()}ms`);\n        setStyleProperty(element, 'animation-fill-mode', getFill());\n        setStyleProperty(element, 'animation-direction', getDirection());\n        const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n        setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n        setStyleProperty(element, 'animation-play-state', 'paused');\n        if (toggleAnimationName) {\n          setStyleProperty(element, 'animation-name', `${stylesheet.id}-alt`);\n        }\n        raf(() => {\n          setStyleProperty(element, 'animation-name', stylesheet.id || null);\n        });\n      }\n    });\n  };\n  const initializeWebAnimation = () => {\n    elements.forEach((element) => {\n      const animation = element.animate(_keyframes, {\n        id,\n        delay: getDelay(),\n        duration: getDuration(),\n        easing: getEasing(),\n        iterations: getIterations(),\n        fill: getFill(),\n        direction: getDirection(),\n      });\n      animation.pause();\n      webAnimations.push(animation);\n    });\n    if (webAnimations.length > 0) {\n      webAnimations[0].onfinish = () => {\n        animationFinish();\n      };\n    }\n  };\n  const initializeAnimation = (toggleAnimationName = true) => {\n    beforeAnimation();\n    if (_keyframes.length > 0) {\n      if (supportsWebAnimations) {\n        initializeWebAnimation();\n      }\n      else {\n        initializeCSSAnimation(toggleAnimationName);\n      }\n    }\n    initialized = true;\n  };\n  const setAnimationStep = (step) => {\n    step = Math.min(Math.max(step, 0), 0.9999);\n    if (supportsWebAnimations) {\n      webAnimations.forEach((animation) => {\n        // When creating the animation the delay is guaranteed to be set to a number.\n        animation.currentTime = animation.effect.getComputedTiming().delay + getDuration() * step;\n        animation.pause();\n      });\n    }\n    else {\n      const animationDuration = `-${getDuration() * step}ms`;\n      elements.forEach((element) => {\n        if (_keyframes.length > 0) {\n          setStyleProperty(element, 'animation-delay', animationDuration);\n          setStyleProperty(element, 'animation-play-state', 'paused');\n        }\n      });\n    }\n  };\n  const updateWebAnimation = (step) => {\n    webAnimations.forEach((animation) => {\n      animation.effect.updateTiming({\n        delay: getDelay(),\n        duration: getDuration(),\n        easing: getEasing(),\n        iterations: getIterations(),\n        fill: getFill(),\n        direction: getDirection(),\n      });\n    });\n    if (step !== undefined) {\n      setAnimationStep(step);\n    }\n  };\n  const updateCSSAnimation = (toggleAnimationName = true, step) => {\n    raf(() => {\n      elements.forEach((element) => {\n        setStyleProperty(element, 'animation-name', keyframeName || null);\n        setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n        setStyleProperty(element, 'animation-timing-function', getEasing());\n        setStyleProperty(element, 'animation-delay', step !== undefined ? `-${step * getDuration()}ms` : `${getDelay()}ms`);\n        setStyleProperty(element, 'animation-fill-mode', getFill() || null);\n        setStyleProperty(element, 'animation-direction', getDirection() || null);\n        const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n        setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n        if (toggleAnimationName) {\n          setStyleProperty(element, 'animation-name', `${keyframeName}-alt`);\n        }\n        raf(() => {\n          setStyleProperty(element, 'animation-name', keyframeName || null);\n        });\n      });\n    });\n  };\n  const update = (deep = false, toggleAnimationName = true, step) => {\n    if (deep) {\n      childAnimations.forEach((animation) => {\n        animation.update(deep, toggleAnimationName, step);\n      });\n    }\n    if (supportsWebAnimations) {\n      updateWebAnimation(step);\n    }\n    else {\n      updateCSSAnimation(toggleAnimationName, step);\n    }\n    return ani;\n  };\n  const progressStart = (forceLinearEasing = false, step) => {\n    childAnimations.forEach((animation) => {\n      animation.progressStart(forceLinearEasing, step);\n    });\n    pauseAnimation();\n    shouldForceLinearEasing = forceLinearEasing;\n    if (!initialized) {\n      initializeAnimation();\n    }\n    update(false, true, step);\n    return ani;\n  };\n  const progressStep = (step) => {\n    childAnimations.forEach((animation) => {\n      animation.progressStep(step);\n    });\n    setAnimationStep(step);\n    return ani;\n  };\n  const progressEnd = (playTo, step, dur) => {\n    shouldForceLinearEasing = false;\n    childAnimations.forEach((animation) => {\n      animation.progressEnd(playTo, step, dur);\n    });\n    if (dur !== undefined) {\n      forceDurationValue = dur;\n    }\n    finished = false;\n    willComplete = true;\n    if (playTo === 0) {\n      forceDirectionValue = getDirection() === 'reverse' ? 'normal' : 'reverse';\n      if (forceDirectionValue === 'reverse') {\n        willComplete = false;\n      }\n      if (supportsWebAnimations) {\n        update();\n        setAnimationStep(1 - step);\n      }\n      else {\n        forceDelayValue = (1 - step) * getDuration() * -1;\n        update(false, false);\n      }\n    }\n    else if (playTo === 1) {\n      if (supportsWebAnimations) {\n        update();\n        setAnimationStep(step);\n      }\n      else {\n        forceDelayValue = step * getDuration() * -1;\n        update(false, false);\n      }\n    }\n    if (playTo !== undefined) {\n      onFinish(() => {\n        forceDurationValue = undefined;\n        forceDirectionValue = undefined;\n        forceDelayValue = undefined;\n      }, {\n        oneTimeCallback: true,\n      });\n      if (!parentAnimation) {\n        play();\n      }\n    }\n    return ani;\n  };\n  const pauseAnimation = () => {\n    if (initialized) {\n      if (supportsWebAnimations) {\n        webAnimations.forEach((animation) => {\n          animation.pause();\n        });\n      }\n      else {\n        elements.forEach((element) => {\n          setStyleProperty(element, 'animation-play-state', 'paused');\n        });\n      }\n      paused = true;\n    }\n  };\n  const pause = () => {\n    childAnimations.forEach((animation) => {\n      animation.pause();\n    });\n    pauseAnimation();\n    return ani;\n  };\n  const onAnimationEndFallback = () => {\n    cssAnimationsTimerFallback = undefined;\n    animationFinish();\n  };\n  const clearCSSAnimationsTimeout = () => {\n    if (cssAnimationsTimerFallback) {\n      clearTimeout(cssAnimationsTimerFallback);\n    }\n  };\n  const playCSSAnimations = () => {\n    clearCSSAnimationsTimeout();\n    raf(() => {\n      elements.forEach((element) => {\n        if (_keyframes.length > 0) {\n          setStyleProperty(element, 'animation-play-state', 'running');\n        }\n      });\n    });\n    if (_keyframes.length === 0 || elements.length === 0) {\n      animationFinish();\n    }\n    else {\n      /**\n       * This is a catchall in the event that a CSS Animation did not finish.\n       * The Web Animations API has mechanisms in place for preventing this.\n       * CSS Animations will not fire an `animationend` event\n       * for elements with `display: none`. The Web Animations API\n       * accounts for this, but using raw CSS Animations requires\n       * this workaround.\n       */\n      const animationDelay = getDelay() || 0;\n      const animationDuration = getDuration() || 0;\n      const animationIterations = getIterations() || 1;\n      // No need to set a timeout when animation has infinite iterations\n      if (isFinite(animationIterations)) {\n        cssAnimationsTimerFallback = setTimeout(onAnimationEndFallback, animationDelay + animationDuration * animationIterations + ANIMATION_END_FALLBACK_PADDING_MS);\n      }\n      animationEnd(elements[0], () => {\n        clearCSSAnimationsTimeout();\n        /**\n         * Ensure that clean up\n         * is always done a frame\n         * before the onFinish handlers\n         * are fired. Otherwise, there\n         * may be flickering if a new\n         * animation is started on the same\n         * element too quickly\n         */\n        raf(() => {\n          clearCSSAnimationPlayState();\n          raf(animationFinish);\n        });\n      });\n    }\n  };\n  const clearCSSAnimationPlayState = () => {\n    elements.forEach((element) => {\n      removeStyleProperty(element, 'animation-duration');\n      removeStyleProperty(element, 'animation-delay');\n      removeStyleProperty(element, 'animation-play-state');\n    });\n  };\n  const playWebAnimations = () => {\n    webAnimations.forEach((animation) => {\n      animation.play();\n    });\n    if (_keyframes.length === 0 || elements.length === 0) {\n      animationFinish();\n    }\n  };\n  const resetAnimation = () => {\n    if (supportsWebAnimations) {\n      setAnimationStep(0);\n      updateWebAnimation();\n    }\n    else {\n      updateCSSAnimation();\n    }\n  };\n  const play = (opts) => {\n    return new Promise((resolve) => {\n      if (opts === null || opts === void 0 ? void 0 : opts.sync) {\n        shouldForceSyncPlayback = true;\n        onFinish(() => (shouldForceSyncPlayback = false), { oneTimeCallback: true });\n      }\n      if (!initialized) {\n        initializeAnimation();\n      }\n      if (finished) {\n        resetAnimation();\n        finished = false;\n      }\n      if (shouldCalculateNumAnimations) {\n        numAnimationsRunning = childAnimations.length + 1;\n        shouldCalculateNumAnimations = false;\n      }\n      /**\n       * When one of these callbacks fires we\n       * need to clear the other's callback otherwise\n       * you can potentially get these callbacks\n       * firing multiple times if the play method\n       * is subsequently called.\n       * Example:\n       * animation.play() (onStop and onFinish callbacks are registered)\n       * animation.stop() (onStop callback is fired, onFinish is not)\n       * animation.play() (onStop and onFinish callbacks are registered)\n       * Total onStop callbacks: 1\n       * Total onFinish callbacks: 2\n       */\n      const onStopCallback = () => {\n        clearCallback(onFinishCallback, onFinishOneTimeCallbacks);\n        resolve();\n      };\n      const onFinishCallback = () => {\n        clearCallback(onStopCallback, onStopOneTimeCallbacks);\n        resolve();\n      };\n      /**\n       * The play method resolves when an animation\n       * run either finishes or is cancelled.\n       */\n      onFinish(onFinishCallback, { oneTimeCallback: true });\n      onStop(onStopCallback, { oneTimeCallback: true });\n      childAnimations.forEach((animation) => {\n        animation.play();\n      });\n      if (supportsWebAnimations) {\n        playWebAnimations();\n      }\n      else {\n        playCSSAnimations();\n      }\n      paused = false;\n    });\n  };\n  /**\n   * Stops an animation and resets it state to the\n   * beginning. This does not fire any onFinish\n   * callbacks because the animation did not finish.\n   * However, since the animation was not destroyed\n   * (i.e. the animation could run again) we do not\n   * clear the onFinish callbacks.\n   */\n  const stop = () => {\n    childAnimations.forEach((animation) => {\n      animation.stop();\n    });\n    if (initialized) {\n      cleanUpElements();\n      initialized = false;\n    }\n    resetFlags();\n    onStopOneTimeCallbacks.forEach((onStopCallback) => onStopCallback.c(0, ani));\n    onStopOneTimeCallbacks.length = 0;\n  };\n  const from = (property, value) => {\n    const firstFrame = _keyframes[0];\n    if (firstFrame !== undefined && (firstFrame.offset === undefined || firstFrame.offset === 0)) {\n      firstFrame[property] = value;\n    }\n    else {\n      _keyframes = [{ offset: 0, [property]: value }, ..._keyframes];\n    }\n    return ani;\n  };\n  const to = (property, value) => {\n    const lastFrame = _keyframes[_keyframes.length - 1];\n    if (lastFrame !== undefined && (lastFrame.offset === undefined || lastFrame.offset === 1)) {\n      lastFrame[property] = value;\n    }\n    else {\n      _keyframes = [..._keyframes, { offset: 1, [property]: value }];\n    }\n    return ani;\n  };\n  const fromTo = (property, fromValue, toValue) => {\n    return from(property, fromValue).to(property, toValue);\n  };\n  return (ani = {\n    parentAnimation,\n    elements,\n    childAnimations,\n    id,\n    animationFinish,\n    from,\n    to,\n    fromTo,\n    parent,\n    play,\n    pause,\n    stop,\n    destroy,\n    keyframes,\n    addAnimation,\n    addElement,\n    update,\n    fill,\n    direction,\n    iterations,\n    duration,\n    easing,\n    delay,\n    getWebAnimations,\n    getKeyframes,\n    getFill,\n    getDirection,\n    getDelay,\n    getIterations,\n    getEasing,\n    getDuration,\n    afterAddRead,\n    afterAddWrite,\n    afterClearStyles,\n    afterStyles,\n    afterRemoveClass,\n    afterAddClass,\n    beforeAddRead,\n    beforeAddWrite,\n    beforeClearStyles,\n    beforeStyles,\n    beforeRemoveClass,\n    beforeAddClass,\n    onFinish,\n    isRunning,\n    progressStart,\n    progressStep,\n    progressEnd,\n  });\n};\n\nexport { createAnimation as c };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}