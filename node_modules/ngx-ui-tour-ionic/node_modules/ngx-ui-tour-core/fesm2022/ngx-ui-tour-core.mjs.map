{"version":3,"file":"ngx-ui-tour-core.mjs","sources":["../../../projects/ngx-ui-tour-core/src/lib/is-in-viewport.ts","../../../projects/ngx-ui-tour-core/src/lib/is-covered.ts","../../../projects/ngx-ui-tour-core/src/lib/scroll-utils.ts","../../../projects/ngx-ui-tour-core/src/lib/overflow-utils.ts","../../../projects/ngx-ui-tour-core/src/lib/scrolling.service.ts","../../../projects/ngx-ui-tour-core/src/lib/tour-resize-observer.service.ts","../../../projects/ngx-ui-tour-core/src/lib/tour-backdrop.service.ts","../../../projects/ngx-ui-tour-core/src/lib/anchor-click.service.ts","../../../projects/ngx-ui-tour-core/src/lib/scroll-blocking.service.ts","../../../projects/ngx-ui-tour-core/src/lib/deep-merge.ts","../../../projects/ngx-ui-tour-core/src/lib/tour.service.ts","../../../projects/ngx-ui-tour-core/src/lib/tour-hotkey-listener.component.ts","../../../projects/ngx-ui-tour-core/src/ngx-ui-tour-core.ts"],"sourcesContent":["export const enum ElementSides {\r\n    Top,\r\n    Bottom,\r\n    All\r\n}\r\n\r\nexport function isInViewport(htmlElement: HTMLElement, sidesToCheck: ElementSides = ElementSides.All): boolean {\r\n    const viewportWidth = window.innerWidth,\r\n        viewportHeight = window.innerHeight,\r\n        boundingRectangle = htmlElement.getBoundingClientRect(),\r\n        areCornersInViewport = boundingRectangle.left >= 0 && boundingRectangle.right <= viewportWidth,\r\n        isTopInViewport = boundingRectangle.top >= 0,\r\n        isBottomInViewport = boundingRectangle.bottom <= viewportHeight;\r\n\r\n    if (sidesToCheck === ElementSides.Top) {\r\n        return isTopInViewport && areCornersInViewport;\r\n    }\r\n    if (sidesToCheck === ElementSides.Bottom) {\r\n        return isBottomInViewport && areCornersInViewport;\r\n    }\r\n\r\n    return isTopInViewport && isBottomInViewport && areCornersInViewport;\r\n}\r\n","import {ElementSides} from './is-in-viewport';\r\n\r\nexport function isCovered(htmlElement: HTMLElement, sidesToCheck: ElementSides = ElementSides.All): boolean {\r\n    const rect = htmlElement.getBoundingClientRect(),\r\n        topEl = document.elementFromPoint(rect.left, rect.top),\r\n        bottomEl = document.elementFromPoint(rect.right, rect.bottom),\r\n        isTopCovered = !!topEl && topEl !== htmlElement && !areElementsRelated(topEl, htmlElement),\r\n        isBottomCovered = !!bottomEl && bottomEl !== htmlElement && !areElementsRelated(bottomEl, htmlElement);\r\n\r\n    if (sidesToCheck === ElementSides.Top) {\r\n        return isTopCovered;\r\n    }\r\n\r\n    if (sidesToCheck === ElementSides.Bottom) {\r\n        return isBottomCovered;\r\n    }\r\n\r\n    return isTopCovered || isBottomCovered;\r\n}\r\n\r\nfunction areElementsRelated(el1: Node, el2: Node): boolean {\r\n    return el1.contains(el2) || el2.contains(el1);\r\n}","export class ScrollUtils {\r\n    \r\n    static getScrollContainer(\r\n        userScrollContainer: string | HTMLElement | undefined\r\n    ): HTMLElement | null {\r\n        if (typeof userScrollContainer === 'string') {\r\n            return document.documentElement.querySelector(userScrollContainer);\r\n        }\r\n        if (userScrollContainer instanceof HTMLElement) {\r\n            return userScrollContainer;\r\n        }\r\n\r\n        return null;\r\n    }\r\n    \r\n}\r\n","export class OverflowUtils {\r\n\r\n    static getVisibleSection(childRect: DOMRect, containerRect: DOMRect): DOMRect {\r\n        return OverflowUtils._isHeightOverflowing(childRect, containerRect) ?\r\n            OverflowUtils._getOverlap(childRect, containerRect) :\r\n            childRect;\r\n    }\r\n\r\n    static isHeightOverflowing(child: HTMLElement | DOMRect, container: HTMLElement | DOMRect): boolean {\r\n        return OverflowUtils._isHeightOverflowing(\r\n            child instanceof HTMLElement ? child.getBoundingClientRect() : child,\r\n            container instanceof HTMLElement ? container.getBoundingClientRect() : container,\r\n        );\r\n    }\r\n\r\n    private static _isHeightOverflowing(childRect: DOMRect, containerRect: DOMRect): boolean {\r\n        return containerRect.height < childRect.height;\r\n    }\r\n\r\n    private static _getOverlap(a: DOMRect, b: DOMRect): DOMRect {\r\n        const top = Math.max(a.top, b.top),\r\n            left = Math.max(a.left, b.left),\r\n            right = Math.min(a.right, b.right),\r\n            bottom = Math.min(a.bottom, b.bottom);\r\n        return new DOMRect(left, top, right - left, bottom - top);\r\n    }\r\n}\r\n\r\n","import {ElementSides, isInViewport} from './is-in-viewport';\r\nimport {debounceTime, firstValueFrom, fromEvent, map, of, timeout} from 'rxjs';\r\nimport {inject, Injectable, PLATFORM_ID} from '@angular/core';\r\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\r\nimport {isCovered} from './is-covered';\r\nimport {ScrollUtils} from './scroll-utils';\r\nimport {OverflowUtils} from './overflow-utils';\r\n\r\n\r\nexport interface ScrollOptions {\r\n    center: boolean;\r\n    smoothScroll: boolean;\r\n    scrollContainer?: string | HTMLElement;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ScrollingService {\r\n\r\n    private readonly platformId = inject(PLATFORM_ID);\r\n    private readonly isBrowser = isPlatformBrowser(this.platformId);\r\n    private readonly document = inject(DOCUMENT);\r\n    private readonly window = this.document.defaultView;\r\n    private scrollOptions: ScrollOptions;\r\n\r\n    ensureVisible(htmlElement: HTMLElement, options: ScrollOptions): Promise<void> {\r\n        this.scrollOptions = options;\r\n\r\n        const behavior: ScrollBehavior = options.smoothScroll && this.isBrowser ? 'smooth' : 'auto';\r\n\r\n        const userScrollContainer = this.scrollOptions.scrollContainer,\r\n            scrollContainer = ScrollUtils.getScrollContainer(userScrollContainer) ?? document.documentElement;\r\n\r\n        if (OverflowUtils.isHeightOverflowing(htmlElement, scrollContainer)) {\r\n            htmlElement.scrollIntoView({\r\n                block: 'start',\r\n                inline: 'start',\r\n                behavior\r\n            });\r\n        } else if (options.center && !('safari' in this.window)) {\r\n            htmlElement.scrollIntoView({\r\n                block: 'center',\r\n                inline: 'center',\r\n                behavior\r\n            });\r\n        } else if (!isInViewport(htmlElement, ElementSides.Bottom) || isCovered(htmlElement, ElementSides.Bottom)) {\r\n            htmlElement.scrollIntoView({\r\n                block: 'end',\r\n                inline: 'nearest',\r\n                behavior\r\n            });\r\n        } else if (!isInViewport(htmlElement, ElementSides.Top) || isCovered(htmlElement, ElementSides.Top)) {\r\n            htmlElement.scrollIntoView({\r\n                block: 'start',\r\n                inline: 'nearest',\r\n                behavior\r\n            });\r\n        } else {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return behavior === 'smooth' ? firstValueFrom(this.waitForScrollFinish$) : Promise.resolve();\r\n    }\r\n\r\n    private get waitForScrollFinish$() {\r\n        const userScrollContainer = this.scrollOptions.scrollContainer,\r\n            scrollContainer = ScrollUtils.getScrollContainer(userScrollContainer) ?? document;\r\n\r\n        return fromEvent(scrollContainer, 'scroll')\r\n            .pipe(\r\n                timeout({\r\n                    each: 75,\r\n                    with: () => of(undefined)\r\n                }),\r\n                debounceTime(50),\r\n                map(() => undefined)\r\n            );\r\n    }\r\n\r\n}\r\n","import {DOCUMENT, isPlatformBrowser} from '@angular/common';\r\nimport {inject, Injectable, PLATFORM_ID} from '@angular/core';\r\nimport {debounceTime, fromEvent, merge, Subject} from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TourResizeObserverService {\r\n\r\n    private readonly resizeElSubject = new Subject<void>();\r\n    private readonly platformId = inject(PLATFORM_ID);\r\n    private readonly isResizeObserverSupported = isPlatformBrowser(this.platformId) && !!ResizeObserver;\r\n    private resizeObserver?: ResizeObserver;\r\n    private readonly document = inject(DOCUMENT);\r\n    private readonly window = this.document.defaultView;\r\n\r\n    public readonly resize$ = merge(\r\n        this.resizeElSubject,\r\n        fromEvent(this.window, 'resize')\r\n    ).pipe(\r\n        debounceTime(10)\r\n    );\r\n\r\n    observeElement(target: Element) {\r\n        if (this.isResizeObserverSupported && !this.resizeObserver) {\r\n            this.resizeObserver = new ResizeObserver(\r\n                () => this.resizeElSubject.next()\r\n            );\r\n        }\r\n\r\n        this.resizeObserver?.observe(target);\r\n    }\r\n\r\n    unobserveElement(target: Element) {\r\n        this.resizeObserver?.unobserve(target);\r\n    }\r\n\r\n    disconnect() {\r\n        this.resizeObserver?.disconnect();\r\n        this.resizeObserver = undefined;\r\n    }\r\n\r\n}\r\n","import {ElementRef, inject, Injectable, RendererFactory2} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ScrollingService} from './scrolling.service';\r\nimport {TourResizeObserverService} from './tour-resize-observer.service';\r\nimport {IStepOption} from './tour.service';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {ScrollUtils} from \"./scroll-utils\";\r\nimport {OverflowUtils} from \"./overflow-utils\";\r\n\r\ninterface Rectangle {\r\n    width: number;\r\n    height: number;\r\n    top: number;\r\n    left: number;\r\n}\r\n\r\nexport interface BackdropConfig {\r\n    zIndex?: string;\r\n    backgroundColor?: string;\r\n    /**\r\n     * Parent container CSS selector or html element reference. Set to fix backdrop stacking issues. Defaults to body.\r\n     */\r\n    parentContainer?: string | HTMLElement;\r\n    /**\r\n     * Offset in pixels to add space between the backdrop and the anchor element.\r\n     */\r\n    offset?: number;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TourBackdropService {\r\n\r\n    private backdropElements: HTMLElement[];\r\n    private targetHtmlElement: HTMLElement;\r\n    private step: IStepOption;\r\n    private resizeSubscription: Subscription;\r\n    private isSpotlightClosed = false;\r\n\r\n    private readonly rendererFactory = inject(RendererFactory2);\r\n    private readonly renderer = this.rendererFactory.createRenderer(null, null);\r\n    private readonly resizeObserverService = inject(TourResizeObserverService);\r\n    private readonly scrollingService = inject(ScrollingService);\r\n    private readonly document = inject(DOCUMENT);\r\n\r\n    public show(targetElement: ElementRef, step: IStepOption) {\r\n        if (this.targetHtmlElement) {\r\n            this.resizeObserverService.unobserveElement(this.targetHtmlElement);\r\n        }\r\n\r\n        this.targetHtmlElement = targetElement.nativeElement;\r\n        this.step = step;\r\n\r\n        this.resizeObserverService.observeElement(this.targetHtmlElement);\r\n\r\n        if (!this.backdropElements) {\r\n            this.backdropElements = this.createBackdropElements();\r\n            this.subscribeToResizeEvents();\r\n        }\r\n\r\n        this.isSpotlightClosed = false;\r\n        this.setBackdropPosition();\r\n    }\r\n\r\n    public closeSpotlight() {\r\n        if (!this.backdropElements) {\r\n            return;\r\n        }\r\n\r\n        const targetRect = this.targetHtmlElement.getBoundingClientRect(),\r\n            centerX = targetRect.left + (targetRect.width / 2),\r\n            centerY = targetRect.top + (targetRect.height / 2),\r\n            centerRect = {\r\n                top: centerY,\r\n                right: centerX,\r\n                bottom: centerY,\r\n                left: centerX,\r\n                width: 0,\r\n                height: 0\r\n            } as DOMRect;\r\n\r\n        this.isSpotlightClosed = true;\r\n        this.setBackdropPosition(centerRect);\r\n    }\r\n\r\n    private setBackdropPosition(rectangle: DOMRect = null) {\r\n        const docEl = this.document.documentElement,\r\n            scrollContainer = ScrollUtils.getScrollContainer(this.step.scrollContainer) ?? docEl,\r\n            elementBoundingRect = rectangle ?? this.targetHtmlElement.getBoundingClientRect(),\r\n            scrollContainerRect = scrollContainer.getBoundingClientRect(),\r\n            visibleSection = OverflowUtils.getVisibleSection(elementBoundingRect, scrollContainerRect),\r\n            scrollHeight = docEl.scrollHeight,\r\n            scrollWidth = docEl.scrollWidth,\r\n            window = this.document.defaultView,\r\n            scrollX = window.scrollX,\r\n            scrollY = window.scrollY,\r\n            offset = this.isSpotlightClosed ? 0 : this.step.backdropConfig?.offset ?? 0,\r\n            leftRect: Rectangle = {\r\n                width: visibleSection.left + scrollX - offset,\r\n                height: scrollHeight,\r\n                top: 0,\r\n                left: 0\r\n            },\r\n            topRect: Rectangle = {\r\n                width: visibleSection.width + offset * 2,\r\n                height: visibleSection.top + scrollY - offset,\r\n                top: 0,\r\n                left: visibleSection.left + scrollX - offset\r\n            },\r\n            bottomRect: Rectangle = {\r\n                width: visibleSection.width + offset * 2,\r\n                height: scrollHeight - (visibleSection.bottom + scrollY) - offset,\r\n                top: visibleSection.bottom + scrollY + offset,\r\n                left: visibleSection.left + scrollX - offset\r\n            },\r\n            rightRect: Rectangle = {\r\n                width: scrollWidth - (visibleSection.right + scrollX) - offset,\r\n                height: scrollHeight,\r\n                top: 0,\r\n                left: visibleSection.right + scrollX + offset\r\n            },\r\n            rectangles: Rectangle[] = [leftRect, topRect, bottomRect, rightRect];\r\n\r\n        for (let i = 0; i < rectangles.length; i++) {\r\n            const styles = this.createBackdropStyles(rectangles[i]);\r\n            this.applyStyles(styles, this.backdropElements[i]);\r\n        }\r\n    }\r\n\r\n    private subscribeToResizeEvents() {\r\n        this.resizeSubscription = this.resizeObserverService.resize$\r\n            .subscribe(\r\n                () => {\r\n                    this.setBackdropPosition();\r\n                    if (!this.step.disableScrollToAnchor) {\r\n                        this.scrollingService.ensureVisible(this.targetHtmlElement, {\r\n                            center: this.step.centerAnchorOnScroll,\r\n                            smoothScroll: false\r\n                        });\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    public close() {\r\n        if (this.backdropElements) {\r\n            this.resizeObserverService.unobserveElement(this.targetHtmlElement);\r\n            this.removeBackdropElement();\r\n            this.resizeSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    public disconnectResizeObserver() {\r\n        this.resizeObserverService.disconnect();\r\n    }\r\n\r\n    private removeBackdropElement() {\r\n        this.backdropElements.forEach(\r\n            backdropElement => this.renderer.removeChild(this.parentContainer, backdropElement)\r\n        );\r\n        this.backdropElements = undefined;\r\n    }\r\n\r\n    private applyStyles(styles: Partial<CSSStyleDeclaration>, element: HTMLElement) {\r\n        for (const name of Object.keys(styles)) {\r\n            this.renderer.setStyle(element, name, styles[name as keyof CSSStyleDeclaration]);\r\n        }\r\n    }\r\n\r\n    private createBackdropStyles(rectangle: Rectangle) {\r\n        const config = this.step.backdropConfig,\r\n            normalizedRect = {\r\n                ...rectangle,\r\n                width: Math.max(rectangle.width, 0),\r\n                height: Math.max(rectangle.height, 0)\r\n            };\r\n\r\n        return {\r\n            position: 'absolute',\r\n            width: `${normalizedRect.width}px`,\r\n            height: `${normalizedRect.height}px`,\r\n            top: `${normalizedRect.top}px`,\r\n            left: `${normalizedRect.left}px`,\r\n            backgroundColor: config?.backgroundColor ?? 'rgba(0, 0, 0, 0.7)',\r\n            zIndex: config?.zIndex ?? '101'\r\n        } as Partial<CSSStyleDeclaration>;\r\n    }\r\n\r\n    private createBackdropElement() {\r\n        const backdropElement = this.renderer.createElement('div');\r\n        this.renderer.addClass(backdropElement, 'ngx-ui-tour_backdrop');\r\n        this.renderer.appendChild(this.parentContainer, backdropElement);\r\n        return backdropElement;\r\n    }\r\n\r\n    private createBackdropElements() {\r\n        return Array\r\n            .from({length: 4})\r\n            .map(() => this.createBackdropElement());\r\n    }\r\n\r\n    private get parentContainer(): HTMLElement {\r\n        const parent = this.step.backdropConfig?.parentContainer;\r\n\r\n        if (parent instanceof HTMLElement) {\r\n            return parent;\r\n        }\r\n        if (typeof parent === 'string') {\r\n            const queryResult = this.document.documentElement.querySelector(parent) as HTMLElement;\r\n\r\n            return queryResult ?? this.document.body;\r\n        }\r\n\r\n        return this.document.body;\r\n    }\r\n\r\n}\r\n","import {inject, Injectable, RendererFactory2} from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AnchorClickService {\r\n\r\n    private readonly rendererFactory = inject(RendererFactory2);\r\n    private readonly renderer = this.rendererFactory.createRenderer(null, null);\r\n\r\n    private unListenToAnchorClickFn: () => void;\r\n\r\n    public removeListener() {\r\n        if (this.unListenToAnchorClickFn) {\r\n            this.unListenToAnchorClickFn();\r\n            this.unListenToAnchorClickFn = undefined;\r\n        }\r\n    }\r\n\r\n    public addListener(anchorEl: HTMLElement, callback: () => void) {\r\n        this.unListenToAnchorClickFn = this.renderer.listen(anchorEl, 'click', callback);\r\n    }\r\n}","import {inject, Injectable, PLATFORM_ID, RendererFactory2} from '@angular/core';\r\nimport {isPlatformBrowser} from '@angular/common';\r\nimport {ScrollUtils} from './scroll-utils';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ScrollBlockingService {\r\n\r\n    private isEnabled = false;\r\n    private userScrollContainer: string | HTMLElement;\r\n\r\n    private readonly platformId = inject(PLATFORM_ID);\r\n    private readonly isBrowser = isPlatformBrowser(this.platformId);\r\n    private readonly rendererFactory = inject(RendererFactory2);\r\n    private readonly renderer = this.rendererFactory.createRenderer(null, null);\r\n\r\n    enable(scrollContainer: string | HTMLElement) {\r\n        if (!this.isBrowser || this.isEnabled) {\r\n            return;\r\n        }\r\n\r\n        this.userScrollContainer = scrollContainer;\r\n        this.toggleOverflow();\r\n        this.isEnabled = true;\r\n    }\r\n\r\n    disable() {\r\n        if (!this.isEnabled) {\r\n            return;\r\n        }\r\n\r\n        this.toggleOverflow();\r\n        this.isEnabled = false;\r\n    }\r\n\r\n    private toggleOverflow() {\r\n        const scrollContainer = ScrollUtils.getScrollContainer(this.userScrollContainer) ?? document.documentElement;\r\n\r\n        if (this.isEnabled) {\r\n            this.renderer.removeStyle(scrollContainer, 'overflow');\r\n        } else {\r\n            this.renderer.setStyle(scrollContainer, 'overflow', 'hidden');\r\n        }\r\n    }\r\n\r\n}","type PlainObject = Record<string | number | symbol, unknown>;\r\n\r\nexport function deepMerge<T>(...objects: T[]): T {\r\n    return objects.reduce((acc: T, cur: T) => {\r\n\r\n        cur ??= {} as T;\r\n        const keys = Object.keys(cur) as (keyof T)[];\r\n\r\n        for (const key of keys) {\r\n            const accValue = acc[key] as PlainObject | unknown,\r\n                curValue = cur[key] as PlainObject | unknown;\r\n\r\n            if (isPlainObject(accValue) && isPlainObject(curValue)) {\r\n                acc[key] = deepMerge(accValue, curValue) as T[keyof T];\r\n            } else {\r\n                acc[key] = curValue as T[keyof T];\r\n            }\r\n        }\r\n\r\n        return acc;\r\n    }, {} as T);\r\n}\r\n\r\nfunction isPlainObject(value: unknown | PlainObject): value is PlainObject {\r\n    return value instanceof Object && value.constructor === Object;\r\n}\r\n","import {inject, Injectable} from '@angular/core';\r\nimport type {UrlSegment} from '@angular/router';\r\nimport {IsActiveMatchOptions, NavigationStart, Router} from '@angular/router';\r\n\r\nimport {TourAnchorDirective} from './tour-anchor.directive';\r\nimport {delay, filter, first, map, merge as mergeStatic, Observable, Subject, takeUntil} from 'rxjs';\r\nimport {ScrollingService} from './scrolling.service';\r\nimport {BackdropConfig, TourBackdropService} from './tour-backdrop.service';\r\nimport {AnchorClickService} from './anchor-click.service';\r\nimport {ScrollBlockingService} from './scroll-blocking.service';\r\nimport {deepMerge} from './deep-merge';\r\n\r\nexport interface StepDimensions {\r\n    width?: string;\r\n    minWidth?: string;\r\n    maxWidth?: string;\r\n}\r\n\r\nexport interface IStepOption {\r\n    stepId?: string;\r\n    anchorId?: string;\r\n    title?: string;\r\n    content?: string;\r\n    route?: string | UrlSegment[];\r\n    nextStep?: number | string;\r\n    prevStep?: number | string;\r\n    disableScrollToAnchor?: boolean;\r\n    centerAnchorOnScroll?: boolean;\r\n    smoothScroll?: boolean;\r\n    /**\r\n     * CSS selector or html element reference. Only set this config if you have enabled \"smoothScroll\" and tour step\r\n     * description pops-up before scrolling has finished or doesn't show up at all. This should only be the case when\r\n     * scroll container is part of shadow DOM.\r\n     */\r\n    scrollContainer?: string | HTMLElement;\r\n    prevBtnTitle?: string;\r\n    nextBtnTitle?: string;\r\n    endBtnTitle?: string;\r\n    enableBackdrop?: boolean;\r\n    backdropConfig?: BackdropConfig;\r\n    isAsync?: boolean;\r\n    isOptional?: boolean;\r\n    delayAfterNavigation?: number;\r\n    delayBeforeStepShow?: number;\r\n    nextOnAnchorClick?: boolean;\r\n    duplicateAnchorHandling?: 'error' | 'registerFirst' | 'registerLast';\r\n    disablePageScrolling?: boolean;\r\n    allowUserInitiatedNavigation?: boolean;\r\n    stepDimensions?: StepDimensions;\r\n    popoverClass?: string;\r\n}\r\n\r\nexport enum TourState {\r\n    OFF,\r\n    ON,\r\n    PAUSED\r\n}\r\n\r\nexport enum Direction {\r\n    Forwards,\r\n    Backwards\r\n}\r\n\r\nexport interface StepChangeParams<T extends IStepOption = IStepOption> {\r\n    step: T;\r\n    direction: Direction;\r\n}\r\n\r\nconst DEFAULT_STEP_OPTIONS: IStepOption = {\r\n    disableScrollToAnchor: false,\r\n    prevBtnTitle: 'Prev',\r\n    nextBtnTitle: 'Next',\r\n    endBtnTitle: 'End',\r\n    enableBackdrop: false,\r\n    isAsync: false,\r\n    isOptional: false,\r\n    delayAfterNavigation: 100,\r\n    delayBeforeStepShow: 0,\r\n    nextOnAnchorClick: false,\r\n    duplicateAnchorHandling: 'error',\r\n    centerAnchorOnScroll: true,\r\n    disablePageScrolling: true,\r\n    smoothScroll: true,\r\n    allowUserInitiatedNavigation: false,\r\n    stepDimensions: {\r\n        minWidth: '250px',\r\n        maxWidth: '280px',\r\n        width: 'auto'\r\n    }\r\n};\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TourService<T extends IStepOption = IStepOption> {\r\n\r\n    public stepShow$: Subject<StepChangeParams<T>> = new Subject();\r\n    public stepHide$: Subject<StepChangeParams<T>> = new Subject();\r\n    public initialize$: Subject<T[]> = new Subject();\r\n    public start$: Subject<void> = new Subject();\r\n    public end$: Subject<void> = new Subject();\r\n    public pause$: Subject<void> = new Subject();\r\n    public resume$: Subject<void> = new Subject();\r\n    public anchorRegister$: Subject<string> = new Subject();\r\n    public anchorUnregister$: Subject<string> = new Subject();\r\n    public events$: Observable<{ name: string; value: unknown }> = mergeStatic(\r\n        this.stepShow$.pipe(map(value => ({name: 'stepShow', value}))),\r\n        this.stepHide$.pipe(map(value => ({name: 'stepHide', value}))),\r\n        this.initialize$.pipe(map(value => ({name: 'initialize', value}))),\r\n        this.start$.pipe(map(value => ({name: 'start', value}))),\r\n        this.end$.pipe(map(value => ({name: 'end', value}))),\r\n        this.pause$.pipe(map(value => ({name: 'pause', value}))),\r\n        this.resume$.pipe(map(value => ({name: 'resume', value}))),\r\n        this.anchorRegister$.pipe(\r\n            map(value => ({\r\n                name: 'anchorRegister',\r\n                value\r\n            }))\r\n        ),\r\n        this.anchorUnregister$.pipe(\r\n            map(value => ({\r\n                name: 'anchorUnregister',\r\n                value\r\n            }))\r\n        )\r\n    );\r\n\r\n    public steps: T[] = [];\r\n    public currentStep: T;\r\n\r\n    public anchors: { [anchorId: string]: TourAnchorDirective } = {};\r\n    private status: TourState = TourState.OFF;\r\n    private isHotKeysEnabled = true;\r\n    private direction = Direction.Forwards;\r\n    private waitingForScroll = false;\r\n    private navigationStarted = false;\r\n    private userDefaults: T;\r\n\r\n    private readonly router = inject(Router);\r\n    private readonly backdrop = inject(TourBackdropService);\r\n    private readonly anchorClickService = inject(AnchorClickService);\r\n    private readonly scrollBlockingService = inject(ScrollBlockingService);\r\n    private readonly scrollingService = inject(ScrollingService);\r\n\r\n    public initialize(steps: T[], stepDefaults?: T): void {\r\n        if (this.status === TourState.ON) {\r\n            console.warn('Can not re-initialize the UI tour while it\\'s still active');\r\n            return;\r\n        }\r\n\r\n        if (steps && steps.length > 0) {\r\n            this.status = TourState.OFF;\r\n            this.steps = steps.map(\r\n                step => deepMerge(\r\n                    DEFAULT_STEP_OPTIONS as T,\r\n                    this.userDefaults,\r\n                    stepDefaults,\r\n                    step\r\n                )\r\n            );\r\n            this.validateSteps();\r\n            this.initialize$.next(this.steps);\r\n            this.subscribeToNavigationStartEvent();\r\n        }\r\n    }\r\n\r\n    public setDefaults(defaultOptions: T): void {\r\n        this.userDefaults = defaultOptions;\r\n    }\r\n\r\n    public getDefaults(): T {\r\n        return this.userDefaults;\r\n    }\r\n\r\n    private validateSteps() {\r\n        for (const step of this.steps) {\r\n            if (step.isAsync && step.isOptional) {\r\n                throw new Error(`Tour step with anchor id \"${step.anchorId}\" can not be both \"async\" and \"optional\"!`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private subscribeToNavigationStartEvent()\r\n    {\r\n        this.router.events\r\n            .pipe(\r\n                filter((event): event is NavigationStart => event instanceof NavigationStart),\r\n                takeUntil(this.end$)\r\n            )\r\n            .subscribe(\r\n                (event) => {\r\n                    const browserBackBtnPressed = event.navigationTrigger === 'popstate',\r\n                      userNavigationAllowed = this.currentStep?.allowUserInitiatedNavigation;\r\n\r\n                    if (!this.navigationStarted && (browserBackBtnPressed || !userNavigationAllowed)) {\r\n                        this.end();\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    public disableHotkeys(): void {\r\n        this.isHotKeysEnabled = false;\r\n    }\r\n\r\n    public enableHotkeys(): void {\r\n        this.isHotKeysEnabled = true;\r\n    }\r\n\r\n    public start(): void {\r\n        if (this.status === TourState.ON) {\r\n            console.warn('tourService.start() called while the tour is already running.');\r\n            return;\r\n        }\r\n        this.startAt(0);\r\n    }\r\n\r\n    public startAt(stepId: number | string): void {\r\n        this.status = TourState.ON;\r\n        this.goToStep(this.loadStep(stepId));\r\n        this.start$.next();\r\n    }\r\n\r\n    public end(): void {\r\n        if (this.waitingForScroll) {\r\n            return;\r\n        }\r\n\r\n        if (this.status === TourState.OFF) {\r\n            return;\r\n        }\r\n        this.status = TourState.OFF;\r\n        this.disableTour();\r\n        this.currentStep = undefined;\r\n        this.end$.next();\r\n    }\r\n\r\n    public pause(): void {\r\n        this.status = TourState.PAUSED;\r\n        this.disableTour();\r\n        this.pause$.next();\r\n    }\r\n\r\n    private disableTour() {\r\n        this.hideStep(this.currentStep);\r\n        this.anchorClickService.removeListener();\r\n        this.backdrop.close();\r\n        this.backdrop.disconnectResizeObserver();\r\n        this.scrollBlockingService.disable();\r\n    }\r\n\r\n    public resume(): void {\r\n        this.status = TourState.ON;\r\n        this.showStep(this.currentStep);\r\n        this.resume$.next();\r\n    }\r\n\r\n    public toggle(pause?: boolean): void {\r\n        if (pause) {\r\n            if (this.currentStep) {\r\n                this.pause();\r\n            } else {\r\n                this.resume();\r\n            }\r\n        } else {\r\n            if (this.currentStep) {\r\n                this.end();\r\n            } else {\r\n                this.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    public next(): void {\r\n        if (this.waitingForScroll) {\r\n            return;\r\n        }\r\n\r\n        this.direction = Direction.Forwards;\r\n        if (this.hasNext(this.currentStep)) {\r\n            this.goToStep(\r\n                this.loadStep(\r\n                    this.currentStep.nextStep ?? this.getStepIndex(this.currentStep) + 1\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    private getStepIndex(step: T): number {\r\n        const index = this.steps.indexOf(step);\r\n\r\n        return index < 0 ? 0 : index;\r\n    }\r\n\r\n    public hasNext(step: T): boolean {\r\n        if (!step) {\r\n            console.warn('Can\\'t get next step. No currentStep.');\r\n            return false;\r\n        }\r\n        return (\r\n            step.nextStep !== undefined ||\r\n            (this.getStepIndex(step) < this.steps.length - 1 && !this.isNextOptionalAnchorMissing(step))\r\n        );\r\n    }\r\n\r\n    private isNextOptionalAnchorMissing(step: T): boolean {\r\n        const stepIndex = this.getStepIndex(step);\r\n\r\n        for (let i = stepIndex + 1; i < this.steps.length; i++) {\r\n            const nextStep = this.steps[i];\r\n\r\n            if (!nextStep.isOptional || this.anchors[nextStep.anchorId])\r\n                return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public prev(): void {\r\n        if (this.waitingForScroll) {\r\n            return;\r\n        }\r\n\r\n        this.direction = Direction.Backwards;\r\n        if (this.hasPrev(this.currentStep)) {\r\n            this.goToStep(\r\n                this.loadStep(\r\n                    this.currentStep.prevStep ?? this.getStepIndex(this.currentStep) - 1\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    public hasPrev(step: T): boolean {\r\n        if (!step) {\r\n            console.warn('Can\\'t get previous step. No currentStep.');\r\n            return false;\r\n        }\r\n        return step.prevStep !== undefined ||\r\n            (this.getStepIndex(step) > 0 && !this.isPrevOptionalAnchorMising(step));\r\n    }\r\n\r\n    private isPrevOptionalAnchorMising(step: T): boolean {\r\n        const stepIndex = this.getStepIndex(step);\r\n\r\n        for (let i = stepIndex - 1; i > -1; i--) {\r\n            const prevStep = this.steps[i];\r\n\r\n            if (!prevStep.isOptional || this.anchors[prevStep.anchorId])\r\n                return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public goto(stepId: number | string): void {\r\n        this.goToStep(this.loadStep(stepId));\r\n    }\r\n\r\n    public register(anchorId: string, anchor: TourAnchorDirective): void {\r\n        if (!anchorId) {\r\n            return;\r\n        }\r\n\r\n        if (this.anchors[anchorId]) {\r\n            const step = this.findStepByAnchorId(anchorId),\r\n                duplicateAnchorHandling = step?.duplicateAnchorHandling ??\r\n                    this.userDefaults?.duplicateAnchorHandling ?? 'error';\r\n\r\n            switch (duplicateAnchorHandling) {\r\n                case 'error':\r\n                    throw new Error(`Tour anchor with id \"${anchorId}\" already registered!`);\r\n                case 'registerFirst':\r\n                    return;\r\n            }\r\n        }\r\n\r\n        this.anchors[anchorId] = anchor;\r\n        this.anchorRegister$.next(anchorId);\r\n    }\r\n\r\n    private findStepByAnchorId(anchorId: string): T {\r\n        return this.steps.find(step => step.anchorId === anchorId);\r\n    }\r\n\r\n    public unregister(anchorId: string): void {\r\n        if (!anchorId) {\r\n            return;\r\n        }\r\n        delete this.anchors[anchorId];\r\n        this.anchorUnregister$.next(anchorId);\r\n    }\r\n\r\n    public getStatus(): TourState {\r\n        return this.status;\r\n    }\r\n\r\n    public isHotkeysEnabled(): boolean {\r\n        return this.isHotKeysEnabled;\r\n    }\r\n\r\n    private goToStep(step: T): void {\r\n        if (!step) {\r\n            console.warn('Can\\'t go to non-existent step');\r\n            this.end();\r\n            return;\r\n        }\r\n        if (this.currentStep) {\r\n            this.backdrop.closeSpotlight();\r\n            this.hideStep(this.currentStep);\r\n        }\r\n\r\n        this.anchorClickService.removeListener();\r\n\r\n        if (step.route !== undefined && step.route !== null) {\r\n            this.navigateToRouteAndSetStep(step);\r\n        } else {\r\n            this.setCurrentStepAsync(step);\r\n        }\r\n    }\r\n\r\n    private listenToOnAnchorClick(step: T) {\r\n        if (step.nextOnAnchorClick) {\r\n            const anchorEl = this.anchors[step.anchorId].element.nativeElement;\r\n            this.anchorClickService.addListener(anchorEl, () => this.next());\r\n        }\r\n    }\r\n\r\n    private async navigateToRouteAndSetStep(step: T) {\r\n        const url = typeof step.route === 'string' ? step.route : this.router.createUrlTree(step.route),\r\n            matchOptions: IsActiveMatchOptions = {\r\n                paths: 'exact',\r\n                matrixParams: 'exact',\r\n                queryParams: 'subset',\r\n                fragment: 'exact'\r\n            };\r\n\r\n        const isActive = this.router.isActive(url, matchOptions);\r\n\r\n        if (isActive) {\r\n            this.setCurrentStepAsync(step);\r\n            return;\r\n        }\r\n\r\n        this.navigationStarted = true;\r\n        const navigated = await this.router.navigateByUrl(url);\r\n        this.navigationStarted = false;\r\n\r\n        if (!navigated) {\r\n            console.warn('Navigation to route failed: ', step.route);\r\n            this.end();\r\n        } else {\r\n            this.setCurrentStepAsync(step, step.delayAfterNavigation);\r\n        }\r\n    }\r\n\r\n    private loadStep(stepId: number | string): T {\r\n        if (typeof stepId === 'number') {\r\n            return this.steps[stepId];\r\n        } else {\r\n            return this.steps.find(step => step.stepId === stepId);\r\n        }\r\n    }\r\n\r\n    private setCurrentStep(step: T): void {\r\n        this.currentStep = step;\r\n        this.showStep(this.currentStep);\r\n    }\r\n\r\n    private setCurrentStepAsync(step: T, delay = 0): void {\r\n        delay = delay || step.delayBeforeStepShow;\r\n\r\n        setTimeout(() => this.setCurrentStep(step), delay);\r\n    }\r\n\r\n    protected async showStep(step: T): Promise<void> {\r\n        const anchor = this.anchors[step && step.anchorId];\r\n\r\n        if (!anchor) {\r\n            if (step.isAsync) {\r\n                this.anchorRegister$\r\n                    .pipe(\r\n                        filter(anchorId => anchorId === step.anchorId),\r\n                        first(),\r\n                        delay(0)\r\n                    )\r\n                    .subscribe(\r\n                        () => this.showStep(step)\r\n                    );\r\n                return;\r\n            }\r\n            if (step.isOptional) {\r\n                this.direction === Direction.Forwards ? this.next() : this.prev();\r\n                return;\r\n            }\r\n\r\n            console.warn(\r\n                'Can\\'t attach to unregistered anchor with id ' + step.anchorId\r\n            );\r\n            this.end();\r\n            return;\r\n        }\r\n        this.listenToOnAnchorClick(step);\r\n        this.waitingForScroll = true;\r\n        await this.scrollToAnchor(step);\r\n        this.waitingForScroll = false;\r\n        anchor.showTourStep(step);\r\n        this.toggleBackdrop(step);\r\n        this.togglePageScrolling(step);\r\n        this.stepShow$.next({\r\n            step,\r\n            direction: this.direction\r\n        });\r\n    }\r\n\r\n    private hideStep(step: T): void {\r\n        const anchor = this.anchors[step && step.anchorId];\r\n        if (!anchor) {\r\n            return;\r\n        }\r\n        anchor.hideTourStep();\r\n        this.stepHide$.next({\r\n            step,\r\n            direction: this.direction\r\n        });\r\n    }\r\n\r\n    private scrollToAnchor(step: T): Promise<void> {\r\n        if (step.disableScrollToAnchor) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        const anchor = this.anchors[step?.anchorId],\r\n            htmlElement = anchor.element.nativeElement;\r\n\r\n        return this.scrollingService.ensureVisible(htmlElement, {\r\n            center: step.centerAnchorOnScroll,\r\n            smoothScroll: step.smoothScroll,\r\n            scrollContainer: step.scrollContainer\r\n        });\r\n    }\r\n\r\n    private toggleBackdrop(step: T) {\r\n        const anchor = this.anchors[step?.anchorId];\r\n\r\n        if (step.enableBackdrop) {\r\n            this.backdrop.show(anchor.element, step);\r\n        } else {\r\n            this.backdrop.close();\r\n        }\r\n    }\r\n\r\n    private togglePageScrolling(step: T) {\r\n        if (step.disablePageScrolling) {\r\n            this.scrollBlockingService.enable(step.scrollContainer);\r\n        } else {\r\n            this.scrollBlockingService.disable();\r\n        }\r\n    }\r\n\r\n}\r\n","import {Component, HostListener} from '@angular/core';\r\nimport {TourService, TourState} from './tour.service';\r\n\r\n\r\n@Component({\r\n    selector: 'tour-hotkey-listener',\r\n    template: `<ng-content></ng-content>`,\r\n    standalone: true\r\n})\r\nexport class TourHotkeyListenerComponent {\r\n\r\n    constructor(\r\n        public readonly tourService: TourService\r\n    ) {}\r\n\r\n    /**\r\n     * Configures hot keys for controlling the tour with the keyboard\r\n     */\r\n    @HostListener('window:keydown.Escape')\r\n    public onEscapeKey(): void {\r\n        if (\r\n            this.tourService.getStatus() === TourState.ON &&\r\n            this.tourService.isHotkeysEnabled()\r\n        ) {\r\n            this.tourService.end();\r\n        }\r\n    }\r\n\r\n    @HostListener('window:keydown.ArrowRight')\r\n    public onArrowRightKey(): void {\r\n        const step = this.tourService.currentStep;\r\n\r\n        if (\r\n            this.tourService.getStatus() === TourState.ON &&\r\n            this.tourService.hasNext(this.tourService.currentStep) &&\r\n            this.tourService.isHotkeysEnabled() &&\r\n            !step?.nextOnAnchorClick\r\n        ) {\r\n            this.tourService.next();\r\n        }\r\n    }\r\n\r\n    @HostListener('window:keydown.ArrowLeft')\r\n    public onArrowLeftKey(): void {\r\n        if (\r\n            this.tourService.getStatus() === TourState.ON &&\r\n            this.tourService.hasPrev(this.tourService.currentStep) &&\r\n            this.tourService.isHotkeysEnabled()\r\n        ) {\r\n            this.tourService.prev();\r\n        }\r\n    }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["mergeStatic","i1.TourService"],"mappings":"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"}