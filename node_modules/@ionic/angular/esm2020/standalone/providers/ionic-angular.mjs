import { DOCUMENT } from '@angular/common';
import { APP_INITIALIZER } from '@angular/core';
import { AngularDelegate, ConfigToken, ModalController, PopoverController, provideComponentInputBinding, } from '@ionic/angular/common';
import { initialize } from '@ionic/core/components';
export const provideIonicAngular = (config) => {
    /**
     * TODO FW-4967
     * Use makeEnvironmentProviders once Angular 14 support is dropped.
     * This prevents provideIonicAngular from being accidentally referenced in an @Component.
     */
    return [
        {
            provide: ConfigToken,
            useValue: config,
        },
        {
            provide: APP_INITIALIZER,
            useFactory: initializeIonicAngular,
            multi: true,
            deps: [ConfigToken, DOCUMENT],
        },
        provideComponentInputBinding(),
        AngularDelegate,
        ModalController,
        PopoverController,
    ];
};
const initializeIonicAngular = (config, doc) => {
    return () => {
        /**
         * By default Ionic Framework hides elements that
         * are not hydrated, but in the CE build there is no
         * hydration.
         * TODO FW-2797: Remove when all integrations have been
         * migrated to CE build.
         */
        doc.documentElement.classList.add('ion-ce');
        initialize(config);
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW9uaWMtYW5ndWxhci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3N0YW5kYWxvbmUvc3JjL3Byb3ZpZGVycy9pb25pYy1hbmd1bGFyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMzQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWhELE9BQU8sRUFDTCxlQUFlLEVBQ2YsV0FBVyxFQUNYLGVBQWUsRUFDZixpQkFBaUIsRUFDakIsNEJBQTRCLEdBQzdCLE1BQU0sdUJBQXVCLENBQUM7QUFDL0IsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBR3BELE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLENBQUMsTUFBb0IsRUFBYyxFQUFFO0lBQ3RFOzs7O09BSUc7SUFDSCxPQUFPO1FBQ0w7WUFDRSxPQUFPLEVBQUUsV0FBVztZQUNwQixRQUFRLEVBQUUsTUFBTTtTQUNqQjtRQUNEO1lBQ0UsT0FBTyxFQUFFLGVBQWU7WUFDeEIsVUFBVSxFQUFFLHNCQUFzQjtZQUNsQyxLQUFLLEVBQUUsSUFBSTtZQUNYLElBQUksRUFBRSxDQUFDLFdBQVcsRUFBRSxRQUFRLENBQUM7U0FDOUI7UUFDRCw0QkFBNEIsRUFBRTtRQUM5QixlQUFlO1FBQ2YsZUFBZTtRQUNmLGlCQUFpQjtLQUNsQixDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRUYsTUFBTSxzQkFBc0IsR0FBRyxDQUFDLE1BQW1CLEVBQUUsR0FBYSxFQUFFLEVBQUU7SUFDcEUsT0FBTyxHQUFHLEVBQUU7UUFDVjs7Ozs7O1dBTUc7UUFDSCxHQUFHLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFNUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3JCLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERPQ1VNRU5UIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEFQUF9JTklUSUFMSVpFUiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHR5cGUgeyBQcm92aWRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgQW5ndWxhckRlbGVnYXRlLFxuICBDb25maWdUb2tlbixcbiAgTW9kYWxDb250cm9sbGVyLFxuICBQb3BvdmVyQ29udHJvbGxlcixcbiAgcHJvdmlkZUNvbXBvbmVudElucHV0QmluZGluZyxcbn0gZnJvbSAnQGlvbmljL2FuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IGluaXRpYWxpemUgfSBmcm9tICdAaW9uaWMvY29yZS9jb21wb25lbnRzJztcbmltcG9ydCB0eXBlIHsgSW9uaWNDb25maWcgfSBmcm9tICdAaW9uaWMvY29yZS9jb21wb25lbnRzJztcblxuZXhwb3J0IGNvbnN0IHByb3ZpZGVJb25pY0FuZ3VsYXIgPSAoY29uZmlnPzogSW9uaWNDb25maWcpOiBQcm92aWRlcltdID0+IHtcbiAgLyoqXG4gICAqIFRPRE8gRlctNDk2N1xuICAgKiBVc2UgbWFrZUVudmlyb25tZW50UHJvdmlkZXJzIG9uY2UgQW5ndWxhciAxNCBzdXBwb3J0IGlzIGRyb3BwZWQuXG4gICAqIFRoaXMgcHJldmVudHMgcHJvdmlkZUlvbmljQW5ndWxhciBmcm9tIGJlaW5nIGFjY2lkZW50YWxseSByZWZlcmVuY2VkIGluIGFuIEBDb21wb25lbnQuXG4gICAqL1xuICByZXR1cm4gW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IENvbmZpZ1Rva2VuLFxuICAgICAgdXNlVmFsdWU6IGNvbmZpZyxcbiAgICB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IEFQUF9JTklUSUFMSVpFUixcbiAgICAgIHVzZUZhY3Rvcnk6IGluaXRpYWxpemVJb25pY0FuZ3VsYXIsXG4gICAgICBtdWx0aTogdHJ1ZSxcbiAgICAgIGRlcHM6IFtDb25maWdUb2tlbiwgRE9DVU1FTlRdLFxuICAgIH0sXG4gICAgcHJvdmlkZUNvbXBvbmVudElucHV0QmluZGluZygpLFxuICAgIEFuZ3VsYXJEZWxlZ2F0ZSxcbiAgICBNb2RhbENvbnRyb2xsZXIsXG4gICAgUG9wb3ZlckNvbnRyb2xsZXIsXG4gIF07XG59O1xuXG5jb25zdCBpbml0aWFsaXplSW9uaWNBbmd1bGFyID0gKGNvbmZpZzogSW9uaWNDb25maWcsIGRvYzogRG9jdW1lbnQpID0+IHtcbiAgcmV0dXJuICgpID0+IHtcbiAgICAvKipcbiAgICAgKiBCeSBkZWZhdWx0IElvbmljIEZyYW1ld29yayBoaWRlcyBlbGVtZW50cyB0aGF0XG4gICAgICogYXJlIG5vdCBoeWRyYXRlZCwgYnV0IGluIHRoZSBDRSBidWlsZCB0aGVyZSBpcyBub1xuICAgICAqIGh5ZHJhdGlvbi5cbiAgICAgKiBUT0RPIEZXLTI3OTc6IFJlbW92ZSB3aGVuIGFsbCBpbnRlZ3JhdGlvbnMgaGF2ZSBiZWVuXG4gICAgICogbWlncmF0ZWQgdG8gQ0UgYnVpbGQuXG4gICAgICovXG4gICAgZG9jLmRvY3VtZW50RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdpb24tY2UnKTtcblxuICAgIGluaXRpYWxpemUoY29uZmlnKTtcbiAgfTtcbn07XG4iXX0=